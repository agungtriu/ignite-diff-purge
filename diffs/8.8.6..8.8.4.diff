diff --git a/IgniteDiffApp/app/models/helpers/setupRootStore.ts b/IgniteDiffApp/app/models/helpers/setupRootStore.ts
index 50f2ccf..634a0ed 100644
--- a/IgniteDiffApp/app/models/helpers/setupRootStore.ts
+++ b/IgniteDiffApp/app/models/helpers/setupRootStore.ts
@@ -27,7 +27,7 @@ export async function setupRootStore(rootStore: RootStore) {
 
   try {
     // load the last known state from AsyncStorage
-    restoredState = ((await storage.load(ROOT_STATE_STORAGE_KEY)) ?? {}) as RootStoreSnapshot
+    restoredState = (await storage.load(ROOT_STATE_STORAGE_KEY)) as RootStoreSnapshot | null
     applySnapshot(rootStore, restoredState)
   } catch (e) {
     // if there's any problems loading, then inform the dev what happened
diff --git a/IgniteDiffApp/app/screens/LoginScreen.tsx b/IgniteDiffApp/app/screens/LoginScreen.tsx
index 0ced35b..44992f8 100644
--- a/IgniteDiffApp/app/screens/LoginScreen.tsx
+++ b/IgniteDiffApp/app/screens/LoginScreen.tsx
@@ -24,12 +24,6 @@ export const LoginScreen: FC<LoginScreenProps> = observer(function LoginScreen(_
     // and pre-fill the form fields.
     setAuthEmail("ignite@infinite.red")
     setAuthPassword("ign1teIsAwes0m3")
-
-    // Return a "cleanup" function that React will run when the component unmounts
-    return () => {
-      setAuthPassword("")
-      setAuthEmail("")
-    }
   }, [])
 
   const error = isSubmitted ? validationError : ""
@@ -66,6 +60,13 @@ export const LoginScreen: FC<LoginScreenProps> = observer(function LoginScreen(_
     [isAuthPasswordHidden],
   )
 
+  useEffect(() => {
+    return () => {
+      setAuthPassword("")
+      setAuthEmail("")
+    }
+  }, [])
+
   return (
     <Screen
       preset="auto"
diff --git a/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs b/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs
index daf8a51..73bca5f 100644
--- a/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs
+++ b/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs
@@ -14,12 +14,13 @@ patches:
 import React, { FC } from "react"
 import { observer } from "mobx-react-lite"
 import { ViewStyle } from "react-native"
+import { NativeStackScreenProps } from "@react-navigation/native-stack"
 import { AppStackScreenProps } from "app/navigators"
 import { Screen, Text } from "app/components"
 // import { useNavigation } from "@react-navigation/native"
 // import { useStores } from "app/models"
 
-interface <%= props.pascalCaseName %>ScreenProps extends AppStackScreenProps<"<%= props.pascalCaseName %>"> {}
+interface <%= props.pascalCaseName %>ScreenProps extends NativeStackScreenProps<AppStackScreenProps<"<%= props.pascalCaseName %>">> {}
 
 export const <%= props.pascalCaseName %>Screen: FC<<%= props.pascalCaseName %>ScreenProps> = observer(function <%= props.pascalCaseName %>Screen() {
   // Pull in one of our MST stores
