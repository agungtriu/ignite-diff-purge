diff --git a/IgniteDiffApp/android/app/BUCK b/IgniteDiffApp/android/app/BUCK
index 414189d..0e77904 100644
--- a/IgniteDiffApp/android/app/BUCK
+++ b/IgniteDiffApp/android/app/BUCK
@@ -35,12 +35,12 @@ android_library(
 
 android_build_config(
     name = "build_config",
-    package = "com.ignitediffapp",
+    package = "com.helloworld",
 )
 
 android_resource(
     name = "res",
-    package = "com.ignitediffapp",
+    package = "com.helloworld",
     res = "src/main/res",
 )
 
diff --git a/IgniteDiffApp/android/app/build.gradle b/IgniteDiffApp/android/app/build.gradle
index 1bb89bf..2d8ac31 100644
--- a/IgniteDiffApp/android/app/build.gradle
+++ b/IgniteDiffApp/android/app/build.gradle
@@ -134,7 +134,7 @@ android {
     }
 
     defaultConfig {
-        applicationId "com.ignitediffapp"
+        applicationId "com.helloworld"
         minSdkVersion rootProject.ext.minSdkVersion
         targetSdkVersion rootProject.ext.targetSdkVersion
         versionCode 1
diff --git a/IgniteDiffApp/android/app/src/debug/java/com/ignitediffapp/ReactNativeFlipper.java b/IgniteDiffApp/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java
similarity index 99%
rename from IgniteDiffApp/android/app/src/debug/java/com/ignitediffapp/ReactNativeFlipper.java
rename to IgniteDiffApp/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java
index 3631f4a..8b7f091 100644
--- a/IgniteDiffApp/android/app/src/debug/java/com/ignitediffapp/ReactNativeFlipper.java
+++ b/IgniteDiffApp/android/app/src/debug/java/com/helloworld/ReactNativeFlipper.java
@@ -4,7 +4,7 @@
  * <p>This source code is licensed under the MIT license found in the LICENSE file in the root
  * directory of this source tree.
  */
-package com.ignitediffapp;
+package com.helloworld;
 
 import android.content.Context;
 import com.facebook.flipper.android.AndroidFlipperClient;
diff --git a/IgniteDiffApp/android/app/src/main/AndroidManifest.xml b/IgniteDiffApp/android/app/src/main/AndroidManifest.xml
index 6d5b871..6db8bad 100644
--- a/IgniteDiffApp/android/app/src/main/AndroidManifest.xml
+++ b/IgniteDiffApp/android/app/src/main/AndroidManifest.xml
@@ -1,5 +1,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-  package="com.ignitediffapp">
+  package="com.helloworld">
 
     <uses-permission android:name="android.permission.INTERNET" />
 
diff --git a/IgniteDiffApp/android/app/src/main/java/com/helloworld/.npmignore b/IgniteDiffApp/android/app/src/main/java/com/helloworld/.npmignore
new file mode 100644
index 0000000..11390d2
--- /dev/null
+++ b/IgniteDiffApp/android/app/src/main/java/com/helloworld/.npmignore
@@ -0,0 +1 @@
+generated/*
diff --git a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java b/IgniteDiffApp/android/app/src/main/java/com/helloworld/MainActivity.java
similarity index 97%
rename from IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
rename to IgniteDiffApp/android/app/src/main/java/com/helloworld/MainActivity.java
index 0d6c512..85040c5 100644
--- a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainActivity.java
+++ b/IgniteDiffApp/android/app/src/main/java/com/helloworld/MainActivity.java
@@ -1,4 +1,4 @@
-package com.ignitediffapp;
+package com.helloworld;
 
 import com.facebook.react.ReactActivity;
 
diff --git a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java b/IgniteDiffApp/android/app/src/main/java/com/helloworld/MainApplication.java
similarity index 95%
rename from IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java
rename to IgniteDiffApp/android/app/src/main/java/com/helloworld/MainApplication.java
index 884a41c..9a7b55a 100644
--- a/IgniteDiffApp/android/app/src/main/java/com/ignitediffapp/MainApplication.java
+++ b/IgniteDiffApp/android/app/src/main/java/com/helloworld/MainApplication.java
@@ -1,7 +1,7 @@
-package com.ignitediffapp;
+package com.helloworld;
 
 // Unimodules https://docs.expo.io/bare/installing-unimodules/#configuration-for-android
-import com.ignitediffapp.generated.BasePackageList;
+import com.helloworld.generated.BasePackageList;
 
 import android.app.Application;
 import android.content.Context;
@@ -78,7 +78,7 @@ public class MainApplication extends Application implements ReactApplication {
          We use reflection here to pick up the class that initializes Flipper,
         since Flipper library is not available in release mode
         */
-        Class<?> aClass = Class.forName("com.ignitediffapp.ReactNativeFlipper");
+        Class<?> aClass = Class.forName("com.helloworld.ReactNativeFlipper");
         aClass
             .getMethod("initializeFlipper", Context.class, ReactInstanceManager.class)
             .invoke(null, context, reactInstanceManager);
diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index 53705c4..84cbf06 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -11,11 +11,18 @@
  */
 import "./i18n"
 import "./utils/ignore-warnings"
-import React, { useState, useEffect } from "react"
+import React, { useState, useEffect, useRef } from "react"
+import { NavigationContainerRef } from "@react-navigation/native"
 import { SafeAreaProvider, initialWindowMetrics } from "react-native-safe-area-context"
 import { initFonts } from "./theme/fonts" // expo
 import * as storage from "./utils/storage"
-import { useBackButtonHandler, AppNavigator, canExit, useNavigationPersistence } from "./navigators"
+import {
+  useBackButtonHandler,
+  AppNavigator,
+  canExit,
+  setAppNavigation,
+  useNavigationPersistence,
+} from "./navigators"
 import { RootStore, RootStoreProvider, setupRootStore } from "./models"
 import { ToggleStorybook } from "../storybook/toggle-storybook"
 
@@ -31,14 +38,15 @@ export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
  * This is the root component of our app.
  */
 function App() {
+  const navigationRef = useRef<NavigationContainerRef>(null)
   const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)
 
-  useBackButtonHandler(canExit)
-  const {
-    initialNavigationState,
-    onNavigationStateChange,
-    isRestored: isNavigationStateRestored,
-  } = useNavigationPersistence(storage, NAVIGATION_PERSISTENCE_KEY)
+  setAppNavigation(navigationRef)
+  useBackButtonHandler(navigationRef, canExit)
+  const { initialNavigationState, onNavigationStateChange } = useNavigationPersistence(
+    storage,
+    NAVIGATION_PERSISTENCE_KEY,
+  )
 
   // Kick off initial async loading actions, like loading fonts and RootStore
   useEffect(() => {
@@ -50,11 +58,9 @@ function App() {
 
   // Before we show the app, we have to wait for our state to be ready.
   // In the meantime, don't render anything. This will be the background
-  // color set in native by rootView's background color.
-  // In iOS: application:didFinishLaunchingWithOptions:
-  // In Android: https://stackoverflow.com/a/45838109/204044
-  // You can replace with your own loading component if you wish.
-  if (!rootStore || !isNavigationStateRestored) return null
+  // color set in native by rootView's background color. You can replace
+  // with your own loading component if you wish.
+  if (!rootStore) return null
 
   // otherwise, we're ready to render the app
   return (
@@ -62,6 +68,7 @@ function App() {
       <RootStoreProvider value={rootStore}>
         <SafeAreaProvider initialMetrics={initialWindowMetrics}>
           <AppNavigator
+            ref={navigationRef}
             initialState={initialNavigationState}
             onStateChange={onNavigationStateChange}
           />
diff --git a/IgniteDiffApp/app/components/gradient-background/gradient-background.story.tsx b/IgniteDiffApp/app/components/gradient-background/gradient-background.story.tsx
deleted file mode 100644
index f828f1f..0000000
--- a/IgniteDiffApp/app/components/gradient-background/gradient-background.story.tsx
+++ /dev/null
@@ -1,16 +0,0 @@
-import * as React from "react"
-import { storiesOf } from "@storybook/react-native"
-import { StoryScreen, Story, UseCase } from "../../../storybook/views"
-import { GradientBackground } from "./gradient-background"
-
-declare let module
-
-storiesOf("GradientBackground", module)
-  .addDecorator((fn) => <StoryScreen>{fn()}</StoryScreen>)
-  .add("Style Presets", () => (
-    <Story>
-      <UseCase text="default/stretch" usage="Full screen background gradient.">
-        <GradientBackground colors={["#422443", "#281b34"]} />
-      </UseCase>
-    </Story>
-  ))
diff --git a/IgniteDiffApp/app/components/gradient-background/gradient-background.tsx b/IgniteDiffApp/app/components/gradient-background/gradient-background.tsx
deleted file mode 100644
index fa05baa..0000000
--- a/IgniteDiffApp/app/components/gradient-background/gradient-background.tsx
+++ /dev/null
@@ -1,13 +0,0 @@
-import * as React from "react"
-import { ViewStyle } from "react-native"
-import { LinearGradient } from "expo-linear-gradient"
-
-const BG_GRADIENT: ViewStyle = { position: "absolute", left: 0, right: 0, top: 0, bottom: 0 }
-
-export interface GradientBackgroundProps {
-  colors: string[]
-}
-
-export function GradientBackground(props: GradientBackgroundProps) {
-  return <LinearGradient colors={props.colors} style={BG_GRADIENT} />
-}
diff --git a/IgniteDiffApp/app/components/index.ts b/IgniteDiffApp/app/components/index.ts
index a1118f3..5ed4a28 100644
--- a/IgniteDiffApp/app/components/index.ts
+++ b/IgniteDiffApp/app/components/index.ts
@@ -3,7 +3,6 @@ export * from "./button/button"
 export * from "./checkbox/checkbox"
 export * from "./form-row/form-row"
 export * from "./header/header"
-export * from "./gradient-background/gradient-background"
 export * from "./icon/icon"
 export * from "./screen/screen"
 export * from "./switch/switch"
diff --git a/IgniteDiffApp/app/navigators/app-navigator.tsx b/IgniteDiffApp/app/navigators/app-navigator.tsx
index a84bd6e..382cbc3 100644
--- a/IgniteDiffApp/app/navigators/app-navigator.tsx
+++ b/IgniteDiffApp/app/navigators/app-navigator.tsx
@@ -5,11 +5,9 @@
  * and a "main" flow which the user will use once logged in.
  */
 import React from "react"
-import { useColorScheme } from "react-native"
-import { NavigationContainer, DefaultTheme, DarkTheme } from "@react-navigation/native"
-import { createNativeStackNavigator } from "@react-navigation/native-stack"
+import { NavigationContainer, NavigationContainerRef } from "@react-navigation/native"
+import { createStackNavigator } from "@react-navigation/stack"
 import { WelcomeScreen, DemoScreen, DemoListScreen } from "../screens"
-import { navigationRef } from "./navigation-utilities"
 
 /**
  * This type allows TypeScript to know what routes are defined in this navigator
@@ -30,7 +28,7 @@ export type NavigatorParamList = {
 }
 
 // Documentation: https://reactnavigation.org/docs/stack-navigator/
-const Stack = createNativeStackNavigator<NavigatorParamList>()
+const Stack = createStackNavigator<NavigatorParamList>()
 
 const AppStack = () => {
   return (
@@ -47,20 +45,16 @@ const AppStack = () => {
   )
 }
 
-interface NavigationProps extends Partial<React.ComponentProps<typeof NavigationContainer>> {}
-
-export const AppNavigator = (props: NavigationProps) => {
-  const colorScheme = useColorScheme()
+export const AppNavigator = React.forwardRef<
+  NavigationContainerRef,
+  Partial<React.ComponentProps<typeof NavigationContainer>>
+>((props, ref) => {
   return (
-    <NavigationContainer
-      ref={navigationRef}
-      theme={colorScheme === "dark" ? DarkTheme : DefaultTheme}
-      {...props}
-    >
+    <NavigationContainer {...props} ref={ref}>
       <AppStack />
     </NavigationContainer>
   )
-}
+})
 
 AppNavigator.displayName = "AppNavigator"
 
diff --git a/IgniteDiffApp/app/navigators/navigation-utilities.tsx b/IgniteDiffApp/app/navigators/navigation-utilities.tsx
index b11432f..fcd12f7 100644
--- a/IgniteDiffApp/app/navigators/navigation-utilities.tsx
+++ b/IgniteDiffApp/app/navigators/navigation-utilities.tsx
@@ -1,12 +1,27 @@
-import { useState, useEffect, useRef } from "react"
+import React, { useState, useEffect, useRef } from "react"
 import { BackHandler } from "react-native"
-import {
-  PartialState,
-  NavigationState,
-  createNavigationContainerRef,
-} from "@react-navigation/native"
+import { PartialState, NavigationState, NavigationContainerRef } from "@react-navigation/native"
+
+export const AppNavigation = {
+  navigate(name: string) {
+    name // eslint-disable-line no-unused-expressions
+  },
+  goBack() {}, // eslint-disable-line @typescript-eslint/no-empty-function
+  resetRoot(state?: PartialState<NavigationState> | NavigationState) {}, // eslint-disable-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function
+  getRootState(): NavigationState {
+    return {} as any
+  },
+}
 
-export const navigationRef = createNavigationContainerRef()
+export const setAppNavigation = (ref: React.RefObject<NavigationContainerRef>) => {
+  for (const method in AppNavigation) {
+    AppNavigation[method] = (...args: any) => {
+      if (ref.current) {
+        return ref.current[method](...args)
+      }
+    }
+  }
+}
 
 /**
  * Gets the current screen from any navigation state.
@@ -25,7 +40,10 @@ export function getActiveRouteName(state: NavigationState | PartialState<Navigat
  * Hook that handles Android back button presses and forwards those on to
  * the navigation or allows exiting the app.
  */
-export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
+export function useBackButtonHandler(
+  ref: React.RefObject<NavigationContainerRef>,
+  canExit: (routeName: string) => boolean,
+) {
   const canExitRef = useRef(canExit)
 
   useEffect(() => {
@@ -35,12 +53,14 @@ export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
   useEffect(() => {
     // We'll fire this when the back button is pressed on Android.
     const onBackPress = () => {
-      if (!navigationRef.isReady()) {
+      const navigation = ref.current
+
+      if (navigation == null) {
         return false
       }
 
       // grab the current route
-      const routeName = getActiveRouteName(navigationRef.getRootState())
+      const routeName = getActiveRouteName(navigation.getRootState())
 
       // are we allowed to exit?
       if (canExitRef.current(routeName)) {
@@ -49,8 +69,9 @@ export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
       }
 
       // we can't exit, so let's turn this into a back action
-      if (navigationRef.canGoBack()) {
-        navigationRef.goBack()
+      if (navigation.canGoBack()) {
+        navigation.goBack()
+
         return true
       }
 
@@ -62,7 +83,7 @@ export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
 
     // Unsubscribe when we're done
     return () => BackHandler.removeEventListener("hardwareBackPress", onBackPress)
-  }, [])
+  }, [ref])
 }
 
 /**
@@ -70,15 +91,9 @@ export function useBackButtonHandler(canExit: (routeName: string) => boolean) {
  */
 export function useNavigationPersistence(storage: any, persistenceKey: string) {
   const [initialNavigationState, setInitialNavigationState] = useState()
+  const [isRestoringNavigationState, setIsRestoringNavigationState] = useState(true)
 
-  // This feature is particularly useful in development mode.
-  // It is selectively enabled in development mode with
-  // the following approach. If you'd like to use navigation persistence
-  // in production, remove the __DEV__ and set the state to true
-  const [isRestored, setIsRestored] = useState(!__DEV__)
-
-  const routeNameRef = useRef<string | undefined>()
-
+  const routeNameRef = useRef()
   const onNavigationStateChange = (state) => {
     const previousRouteName = routeNameRef.current
     const currentRouteName = getActiveRouteName(state)
@@ -100,36 +115,13 @@ export function useNavigationPersistence(storage: any, persistenceKey: string) {
       const state = await storage.load(persistenceKey)
       if (state) setInitialNavigationState(state)
     } finally {
-      setIsRestored(true)
+      setIsRestoringNavigationState(false)
     }
   }
 
   useEffect(() => {
-    if (!isRestored) restoreState()
-  }, [isRestored])
-
-  return { onNavigationStateChange, restoreState, isRestored, initialNavigationState }
-}
-
-/**
- * use this to navigate to navigate without the navigation
- * prop. If you have access to the navigation prop, do not use this.
- * More info: https://reactnavigation.org/docs/navigating-without-navigation-prop/
- */
-export function navigate(name: any, params?: any) {
-  if (navigationRef.isReady()) {
-    navigationRef.navigate(name as never, params as never)
-  }
-}
+    if (isRestoringNavigationState) restoreState()
+  }, [isRestoringNavigationState])
 
-export function goBack() {
-  if (navigationRef.isReady() && navigationRef.canGoBack()) {
-    navigationRef.goBack()
-  }
-}
-
-export function resetRoot(params = { index: 0, routes: [] }) {
-  if (navigationRef.isReady()) {
-    navigationRef.resetRoot(params)
-  }
+  return { onNavigationStateChange, restoreState, initialNavigationState }
 }
diff --git a/IgniteDiffApp/app/screens/demo/demo-list-screen.tsx b/IgniteDiffApp/app/screens/demo/demo-list-screen.tsx
index 56863d1..ae66307 100644
--- a/IgniteDiffApp/app/screens/demo/demo-list-screen.tsx
+++ b/IgniteDiffApp/app/screens/demo/demo-list-screen.tsx
@@ -1,11 +1,10 @@
-import React, { useEffect, FC } from "react"
+import React, { useEffect } from "react"
 import { FlatList, TextStyle, View, ViewStyle, ImageStyle } from "react-native"
-import { StackScreenProps } from "@react-navigation/stack"
+import { useNavigation } from "@react-navigation/native"
 import { observer } from "mobx-react-lite"
-import { Header, Screen, Text, AutoImage as Image, GradientBackground } from "../../components"
+import { Header, Screen, Text, Wallpaper, AutoImage as Image } from "../../components"
 import { color, spacing } from "../../theme"
 import { useStores } from "../../models"
-import { NavigatorParamList } from "../../navigators"
 
 const FULL: ViewStyle = {
   flex: 1,
@@ -42,47 +41,46 @@ const FLAT_LIST: ViewStyle = {
   paddingHorizontal: spacing[4],
 }
 
-export const DemoListScreen: FC<StackScreenProps<NavigatorParamList, "demoList">> = observer(
-  ({ navigation }) => {
-    const goBack = () => navigation.goBack()
+export const DemoListScreen = observer(function DemoListScreen() {
+  const navigation = useNavigation()
+  const goBack = () => navigation.goBack()
 
-    const { characterStore } = useStores()
-    const { characters } = characterStore
+  const { characterStore } = useStores()
+  const { characters } = characterStore
 
-    useEffect(() => {
-      async function fetchData() {
-        await characterStore.getCharacters()
-      }
+  useEffect(() => {
+    async function fetchData() {
+      await characterStore.getCharacters()
+    }
 
-      fetchData()
-    }, [])
+    fetchData()
+  }, [])
 
-    return (
-      <View testID="DemoListScreen" style={FULL}>
-        <GradientBackground colors={["#422443", "#281b34"]} />
-        <Screen style={CONTAINER} preset="fixed" backgroundColor={color.transparent}>
-          <Header
-            headerTx="demoListScreen.title"
-            leftIcon="back"
-            onLeftPress={goBack}
-            style={HEADER}
-            titleStyle={HEADER_TITLE}
-          />
-          <FlatList
-            contentContainerStyle={FLAT_LIST}
-            data={[...characters]}
-            keyExtractor={(item) => String(item.id)}
-            renderItem={({ item }) => (
-              <View style={LIST_CONTAINER}>
-                <Image source={{ uri: item.image }} style={IMAGE} />
-                <Text style={LIST_TEXT}>
-                  {item.name} ({item.status})
-                </Text>
-              </View>
-            )}
-          />
-        </Screen>
-      </View>
-    )
-  },
-)
+  return (
+    <View testID="DemoListScreen" style={FULL}>
+      <Wallpaper />
+      <Screen style={CONTAINER} preset="fixed" backgroundColor={color.transparent}>
+        <Header
+          headerTx="demoListScreen.title"
+          leftIcon="back"
+          onLeftPress={goBack}
+          style={HEADER}
+          titleStyle={HEADER_TITLE}
+        />
+        <FlatList
+          contentContainerStyle={FLAT_LIST}
+          data={[...characters]}
+          keyExtractor={(item) => String(item.id)}
+          renderItem={({ item }) => (
+            <View style={LIST_CONTAINER}>
+              <Image source={{ uri: item.image }} style={IMAGE} />
+              <Text style={LIST_TEXT}>
+                {item.name} ({item.status})
+              </Text>
+            </View>
+          )}
+        />
+      </Screen>
+    </View>
+  )
+})
diff --git a/IgniteDiffApp/app/screens/demo/demo-screen.tsx b/IgniteDiffApp/app/screens/demo/demo-screen.tsx
index 79d8d5c..40e3830 100644
--- a/IgniteDiffApp/app/screens/demo/demo-screen.tsx
+++ b/IgniteDiffApp/app/screens/demo/demo-screen.tsx
@@ -1,6 +1,6 @@
-import React, { FC } from "react"
+import React from "react"
 import { ImageStyle, Platform, TextStyle, View, ViewStyle } from "react-native"
-import { StackScreenProps } from "@react-navigation/stack"
+import { useNavigation } from "@react-navigation/native"
 import { observer } from "mobx-react-lite"
 import {
   BulletItem,
@@ -8,10 +8,9 @@ import {
   Header,
   Text,
   Screen,
+  Wallpaper,
   AutoImage as Image,
-  GradientBackground,
 } from "../../components"
-import { NavigatorParamList } from "../../navigators"
 import { color, spacing } from "../../theme"
 import { Api } from "../../services/api"
 import { save } from "../../utils/storage"
@@ -93,91 +92,90 @@ const platformCommand = Platform.select({
   android: "Cmd/Ctrl + M",
 })
 
-export const DemoScreen: FC<StackScreenProps<NavigatorParamList, "demo">> = observer(
-  ({ navigation }) => {
-    const goBack = () => navigation.goBack()
+export const DemoScreen = observer(function DemoScreen() {
+  const navigation = useNavigation()
+  const goBack = () => navigation.goBack()
 
-    const demoReactotron = React.useMemo(
-      () => async () => {
-        console.tron.log("Your Friendly tron log message")
-        console.tron.logImportant("I am important")
-        console.tron.display({
-          name: "DISPLAY",
-          value: {
-            numbers: 1,
-            strings: "strings",
-            booleans: true,
-            arrays: [1, 2, 3],
-            objects: {
+  const demoReactotron = React.useMemo(
+    () => async () => {
+      console.tron.log("Your Friendly tron log message")
+      console.tron.logImportant("I am important")
+      console.tron.display({
+        name: "DISPLAY",
+        value: {
+          numbers: 1,
+          strings: "strings",
+          booleans: true,
+          arrays: [1, 2, 3],
+          objects: {
+            deeper: {
               deeper: {
-                deeper: {
-                  yay: "👾",
-                },
+                yay: "👾",
               },
             },
-            functionNames: function hello() {
-              /* dummy function */
-            },
           },
-          preview: "More control with display()",
-          important: true,
-          image: {
-            uri:
-              "https://avatars2.githubusercontent.com/u/3902527?s=200&u=a0d16b13ed719f35d95ca0f4440f5d07c32c349a&v=4",
+          functionNames: function hello() {
+            /* dummy function */
           },
-        })
-        // make an API call for the demo
-        // Don't do API like this, use store's API
-        const demo = new Api()
-        demo.setup()
-        demo.getUser("1")
-        // Let's do some async storage stuff
-        await save("Cool Name", "Boaty McBoatface")
-      },
-      [],
-    )
+        },
+        preview: "More control with display()",
+        important: true,
+        image: {
+          uri:
+            "https://avatars2.githubusercontent.com/u/3902527?s=200&u=a0d16b13ed719f35d95ca0f4440f5d07c32c349a&v=4",
+        },
+      })
+      // make an API call for the demo
+      // Don't do API like this, use store's API
+      const demo = new Api()
+      demo.setup()
+      demo.getUser("1")
+      // Let's do some async storage stuff
+      await save("Cool Name", "Boaty McBoatface")
+    },
+    [],
+  )
 
-    return (
-      <View testID="DemoScreen" style={FULL}>
-        <GradientBackground colors={["#422443", "#281b34"]} />
-        <Screen style={CONTAINER} preset="scroll" backgroundColor={color.transparent}>
-          <Header
-            headerTx="demoScreen.howTo"
-            leftIcon="back"
-            onLeftPress={goBack}
-            style={HEADER}
-            titleStyle={HEADER_TITLE}
-          />
-          <Text style={TITLE} preset="header" tx="demoScreen.title" />
-          <Text style={TAGLINE} tx="demoScreen.tagLine" />
-          <BulletItem text="Integrated here, Navigation with State, TypeScript, Storybook, Solidarity, and i18n." />
-          <BulletItem
-            text={`To run Storybook, press ${platformCommand} or shake the device to show the developer menu, then select "Toggle Storybook"`}
-          />
-          <BulletItem text="Load up Reactotron!  You can inspect your app, view the events, interact, and so much more!" />
-          <View>
-            <Button
-              style={DEMO}
-              textStyle={DEMO_TEXT}
-              tx="demoScreen.reactotron"
-              onPress={demoReactotron}
-            />
-            <Text style={HINT} tx={`demoScreen.${Platform.OS}ReactotronHint` as const} />
-          </View>
+  return (
+    <View testID="DemoScreen" style={FULL}>
+      <Wallpaper />
+      <Screen style={CONTAINER} preset="scroll" backgroundColor={color.transparent}>
+        <Header
+          headerTx="demoScreen.howTo"
+          leftIcon="back"
+          onLeftPress={goBack}
+          style={HEADER}
+          titleStyle={HEADER_TITLE}
+        />
+        <Text style={TITLE} preset="header" tx="demoScreen.title" />
+        <Text style={TAGLINE} tx="demoScreen.tagLine" />
+        <BulletItem text="Integrated here, Navigation with State, TypeScript, Storybook, Solidarity, and i18n." />
+        <BulletItem
+          text={`To run Storybook, press ${platformCommand} or shake the device to show the developer menu, then select "Toggle Storybook"`}
+        />
+        <BulletItem text="Load up Reactotron!  You can inspect your app, view the events, interact, and so much more!" />
+        <View>
           <Button
             style={DEMO}
             textStyle={DEMO_TEXT}
-            tx="demoScreen.demoList"
-            onPress={() => navigation.navigate("demoList")}
+            tx="demoScreen.reactotron"
+            onPress={demoReactotron}
           />
-          <Image source={logoIgnite} style={IGNITE} />
-          <View style={LOVE_WRAPPER}>
-            <Text style={LOVE} text="Made with" />
-            <Image source={heart} style={HEART} />
-            <Text style={LOVE} text="by Infinite Red" />
-          </View>
-        </Screen>
-      </View>
-    )
-  },
-)
+          <Text style={HINT} tx={`demoScreen.${Platform.OS}ReactotronHint` as const} />
+        </View>
+        <Button
+          style={DEMO}
+          textStyle={DEMO_TEXT}
+          tx="demoScreen.demoList"
+          onPress={() => navigation.navigate("demoList")}
+        />
+        <Image source={logoIgnite} style={IGNITE} />
+        <View style={LOVE_WRAPPER}>
+          <Text style={LOVE} text="Made with" />
+          <Image source={heart} style={HEART} />
+          <Text style={LOVE} text="by Infinite Red" />
+        </View>
+      </Screen>
+    </View>
+  )
+})
diff --git a/IgniteDiffApp/app/screens/welcome/welcome-screen.tsx b/IgniteDiffApp/app/screens/welcome/welcome-screen.tsx
index 40cb71e..47ed2ce 100644
--- a/IgniteDiffApp/app/screens/welcome/welcome-screen.tsx
+++ b/IgniteDiffApp/app/screens/welcome/welcome-screen.tsx
@@ -1,18 +1,9 @@
-import React, { FC } from "react"
+import React from "react"
 import { View, ViewStyle, TextStyle, ImageStyle, SafeAreaView } from "react-native"
-import { StackScreenProps } from "@react-navigation/stack"
+import { useNavigation } from "@react-navigation/native"
 import { observer } from "mobx-react-lite"
-import {
-  Button,
-  Header,
-  Screen,
-  Text,
-  GradientBackground,
-  AutoImage as Image,
-} from "../../components"
+import { Button, Header, Screen, Text, Wallpaper, AutoImage as Image } from "../../components"
 import { color, spacing, typography } from "../../theme"
-import { NavigatorParamList } from "../../navigators"
-
 const bowserLogo = require("./bowser.png")
 
 const FULL: ViewStyle = { flex: 1 }
@@ -86,43 +77,42 @@ const FOOTER_CONTENT: ViewStyle = {
   paddingHorizontal: spacing[4],
 }
 
-export const WelcomeScreen: FC<StackScreenProps<NavigatorParamList, "welcome">> = observer(
-  ({ navigation }) => {
-    const nextScreen = () => navigation.navigate("demo")
+export const WelcomeScreen = observer(function WelcomeScreen() {
+  const navigation = useNavigation()
+  const nextScreen = () => navigation.navigate("demo")
 
-    return (
-      <View testID="WelcomeScreen" style={FULL}>
-        <GradientBackground colors={["#422443", "#281b34"]} />
-        <Screen style={CONTAINER} preset="scroll" backgroundColor={color.transparent}>
-          <Header headerTx="welcomeScreen.poweredBy" style={HEADER} titleStyle={HEADER_TITLE} />
-          <Text style={TITLE_WRAPPER}>
-            <Text style={TITLE} text="Your new app, " />
-            <Text style={ALMOST} text="almost" />
-            <Text style={TITLE} text="!" />
-          </Text>
-          <Text style={TITLE} preset="header" tx="welcomeScreen.readyForLaunch" />
-          <Image source={bowserLogo} style={BOWSER} />
-          <Text style={CONTENT}>
-            This probably isn't what your app is going to look like. Unless your designer handed you
-            this screen and, in that case, congrats! You're ready to ship.
-          </Text>
-          <Text style={CONTENT}>
-            For everyone else, this is where you'll see a live preview of your fully functioning app
-            using Ignite.
-          </Text>
-        </Screen>
-        <SafeAreaView style={FOOTER}>
-          <View style={FOOTER_CONTENT}>
-            <Button
-              testID="next-screen-button"
-              style={CONTINUE}
-              textStyle={CONTINUE_TEXT}
-              tx="welcomeScreen.continue"
-              onPress={nextScreen}
-            />
-          </View>
-        </SafeAreaView>
-      </View>
-    )
-  },
-)
+  return (
+    <View testID="WelcomeScreen" style={FULL}>
+      <Wallpaper />
+      <Screen style={CONTAINER} preset="scroll" backgroundColor={color.transparent}>
+        <Header headerTx="welcomeScreen.poweredBy" style={HEADER} titleStyle={HEADER_TITLE} />
+        <Text style={TITLE_WRAPPER}>
+          <Text style={TITLE} text="Your new app, " />
+          <Text style={ALMOST} text="almost" />
+          <Text style={TITLE} text="!" />
+        </Text>
+        <Text style={TITLE} preset="header" tx="welcomeScreen.readyForLaunch" />
+        <Image source={bowserLogo} style={BOWSER} />
+        <Text style={CONTENT}>
+          This probably isn't what your app is going to look like. Unless your designer handed you
+          this screen and, in that case, congrats! You're ready to ship.
+        </Text>
+        <Text style={CONTENT}>
+          For everyone else, this is where you'll see a live preview of your fully functioning app
+          using Ignite.
+        </Text>
+      </Screen>
+      <SafeAreaView style={FOOTER}>
+        <View style={FOOTER_CONTENT}>
+          <Button
+            testID="next-screen-button"
+            style={CONTINUE}
+            textStyle={CONTINUE_TEXT}
+            tx="welcomeScreen.continue"
+            onPress={nextScreen}
+          />
+        </View>
+      </SafeAreaView>
+    </View>
+  )
+})
diff --git a/IgniteDiffApp/app/services/reactotron/reactotron.ts b/IgniteDiffApp/app/services/reactotron/reactotron.ts
index 799a10a..c585b91 100644
--- a/IgniteDiffApp/app/services/reactotron/reactotron.ts
+++ b/IgniteDiffApp/app/services/reactotron/reactotron.ts
@@ -1,12 +1,11 @@
 import { Tron } from "./tron"
 import AsyncStorage from "@react-native-async-storage/async-storage"
-import { ArgType } from "reactotron-core-client"
 import { RootStore } from "../../models/root-store/root-store"
 import { onSnapshot } from "mobx-state-tree"
 import { ReactotronConfig, DEFAULT_REACTOTRON_CONFIG } from "./reactotron-config"
 import { mst } from "reactotron-mst"
 import { clear } from "../../utils/storage"
-import { goBack, resetRoot, navigate } from "../../navigators/navigation-utilities"
+import { AppNavigation } from "../../navigators/navigation-utilities"
 import { Platform } from "react-native"
 
 // Teach TypeScript about the bad things we want to do.
@@ -159,38 +158,17 @@ export class Reactotron {
         command: "resetNavigation",
         handler: () => {
           console.tron.log("resetting navigation state")
-          resetRoot({ index: 0, routes: [] })
+          AppNavigation.resetRoot({ routes: [] })
         },
       })
 
-      Tron.onCustomCommand({
-        command: "navigateTo",
-        handler: (args) => {
-          const { route } = args
-          if (route) {
-            console.log(`Navigating to: ${route}`)
-            navigate(route)
-          } else {
-            console.log("Could not navigate. No route provided.")
-          }
-        },
-        title: "Navigate To Screen",
-        description: "Navigates to a screen by name.",
-        args: [
-          {
-            name: "route",
-            type: ArgType.String,
-          },
-        ],
-      })
-
       Tron.onCustomCommand({
         title: "Go Back",
         description: "Goes back",
         command: "goBack",
         handler: () => {
           console.tron.log("Going back")
-          goBack()
+          AppNavigation.goBack()
         },
       })
 
diff --git a/IgniteDiffApp/ios/IgniteDiffApp/AppDelegate.m b/IgniteDiffApp/ios/IgniteDiffApp/AppDelegate.m
index f685b8b..37d05d5 100644
--- a/IgniteDiffApp/ios/IgniteDiffApp/AppDelegate.m
+++ b/IgniteDiffApp/ios/IgniteDiffApp/AppDelegate.m
@@ -50,9 +50,6 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
                                             initialProperties:nil];
 
     if (@available(iOS 13.0, *)) {
-        // Change this to whatever color you want -- it'll show as
-        // your app loads for the first time in the background.
-        // You can use the system's background color if you wish
         rootView.backgroundColor = [UIColor systemBackgroundColor];
     } else {
         rootView.backgroundColor = [UIColor whiteColor];
diff --git a/IgniteDiffApp/ios/Podfile b/IgniteDiffApp/ios/Podfile
index f9457dd..2ffb0cd 100644
--- a/IgniteDiffApp/ios/Podfile
+++ b/IgniteDiffApp/ios/Podfile
@@ -2,7 +2,7 @@ require_relative '../node_modules/react-native/scripts/react_native_pods'
 require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
 require_relative '../node_modules/react-native-unimodules/cocoapods.rb'
 
-platform :ios, '11.0'
+platform :ios, '10.0'
 
 target 'IgniteDiffApp' do
   use_unimodules!
diff --git a/IgniteDiffApp/ios/Podfile.lock b/IgniteDiffApp/ios/Podfile.lock
index 5f2cd6b..c72e1e1 100644
--- a/IgniteDiffApp/ios/Podfile.lock
+++ b/IgniteDiffApp/ios/Podfile.lock
@@ -12,8 +12,6 @@ PODS:
     - React-Core
     - UMCore
     - UMImageLoaderInterface
-  - EXLinearGradient (9.2.0):
-    - UMCore
   - EXLocalization (9.1.0):
     - UMCore
   - EXPermissions (10.0.0):
@@ -335,7 +333,7 @@ PODS:
     - React-cxxreact (= 0.64.2)
     - React-jsi (= 0.64.2)
     - React-perflogger (= 0.64.2)
-  - RNCAsyncStorage (1.15.6):
+  - RNCAsyncStorage (1.15.5):
     - React-Core
   - RNCMaskedView (0.1.10):
     - React
@@ -371,7 +369,6 @@ DEPENDENCIES:
   - EXConstants (from `../node_modules/expo-constants/ios`)
   - EXFileSystem (from `../node_modules/expo-file-system/ios`)
   - EXImageLoader (from `../node_modules/expo-image-loader/ios`)
-  - EXLinearGradient (from `../node_modules/expo-linear-gradient/ios`)
   - EXLocalization (from `../node_modules/expo-localization/ios`)
   - EXPermissions (from `../node_modules/expo-permissions/ios`)
   - FBLazyVector (from `../node_modules/react-native/Libraries/FBLazyVector`)
@@ -466,8 +463,6 @@ EXTERNAL SOURCES:
     :path: "../node_modules/expo-file-system/ios"
   EXImageLoader:
     :path: "../node_modules/expo-image-loader/ios"
-  EXLinearGradient:
-    :path: "../node_modules/expo-linear-gradient/ios"
   EXLocalization:
     :path: "../node_modules/expo-localization/ios"
   EXPermissions:
@@ -572,7 +567,6 @@ SPEC CHECKSUMS:
   EXConstants: 54d0bf04319d1692c6c7bc03ca151ef7a71705a4
   EXFileSystem: 0e4974ab77bff04cda68d2886d070cbe64b93a6b
   EXImageLoader: f96ec9992733a4224418bbd9382e5485c8948944
-  EXLinearGradient: f9ea3259f096b27008860ca50764184225dc71c9
   EXLocalization: 8b9463c81843da214476b541a27811dd885c9a76
   EXPermissions: 17d4846ad1880f6891c74ae58ca1acb43e47ed47
   FBLazyVector: e686045572151edef46010a6f819ade377dfeb4b
@@ -611,7 +605,7 @@ SPEC CHECKSUMS:
   React-RCTVibration: 24600e3b1aaa77126989bc58b6747509a1ba14f3
   React-runtimeexecutor: a9904c6d0218fb9f8b19d6dd88607225927668f9
   ReactCommon: 149906e01aa51142707a10665185db879898e966
-  RNCAsyncStorage: b7c6564ce662366dd44d0189456183ef7eda2d4d
+  RNCAsyncStorage: 56a3355a10b5d660c48c6e37325ac85ebfd09885
   RNCMaskedView: 5a8ec07677aa885546a0d98da336457e2bea557f
   RNGestureHandler: a479ebd5ed4221a810967000735517df0d2db211
   RNKeychain: b8e0711b959a19c5b057d1e970d3c83d159b6da5
@@ -632,6 +626,6 @@ SPEC CHECKSUMS:
   Yoga: 575c581c63e0d35c9a83f4b46d01d63abc1100ac
   YogaKit: f782866e155069a2cca2517aafea43200b01fd5a
 
-PODFILE CHECKSUM: c1cff56d6e7e9d9e531c0b993c32af466032c01f
+PODFILE CHECKSUM: c6f7f1ee26dfa0c3f2b4c888bb412f647c3fb377
 
 COCOAPODS: 1.10.1
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index 1cb1c6d..3ccd19a 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -28,12 +28,10 @@
   "dependencies": {
     "@react-native-async-storage/async-storage": "^1.14.1",
     "@react-native-community/masked-view": "0.1.10",
-    "@react-navigation/native": "~6.0.1",
-    "@react-navigation/stack": "~6.0.1",
-    "@react-navigation/native-stack": "^6.0.2",
+    "@react-navigation/native": "5.9.3",
+    "@react-navigation/stack": "5.12.8",
     "@unimodules/core": "6.0.0",
     "apisauce": "2.0.0",
-    "expo-linear-gradient": "^9.2.0",
     "expo-localization": "9.1.0",
     "i18n-js": "3.8.0",
     "mobx": "6.1.8",
@@ -47,8 +45,8 @@
     "react-native-screens": "2.18.1",
     "react-native-unimodules": "0.12.0",
     "reactotron-mst": "3.1.3",
-    "reactotron-react-js": "^3.3.7",
     "reactotron-react-native": "5.0.0",
+    "reactotron-react-js": "^3.3.7",
     "validate.js": "0.13.1"
   },
   "devDependencies": {
@@ -104,7 +102,7 @@
       "/e2e"
     ],
     "transformIgnorePatterns": [
-      "node_modules/(?!(jest-)?react-native|expo-linear-gradient|@react-native|@react-navigation|@storybook|@react-native-community|expo-localization|@unimodules)"
+      "node_modules/(?!(jest-)?react-native|@react-native|@react-navigation|@storybook|@react-native-community|expo-localization|@unimodules)"
     ]
   },
   "prettier": {
diff --git a/IgniteDiffApp/storybook/storybook-registry.ts b/IgniteDiffApp/storybook/storybook-registry.ts
index c782fc7..83f0ed8 100644
--- a/IgniteDiffApp/storybook/storybook-registry.ts
+++ b/IgniteDiffApp/storybook/storybook-registry.ts
@@ -6,6 +6,5 @@ require("../app/components/switch/switch.story")
 require("../app/components/text-field/text-field.story")
 require("../app/components/checkbox/checkbox.story")
 require("../app/components/wallpaper/wallpaper.story")
-require("../app/components/gradient-background/gradient-background.story")
 require("../app/components/icon/icon.story")
 require("../app/components/header/header.story")
diff --git a/IgniteDiffApp/yarn.lock b/IgniteDiffApp/yarn.lock
index a36f5b0..82cc9e8 100644
--- a/IgniteDiffApp/yarn.lock
+++ b/IgniteDiffApp/yarn.lock
@@ -2073,11 +2073,11 @@
     react-lifecycles-compat "^3.0.4"
 
 "@react-native-async-storage/async-storage@^1.14.1":
-  version "1.15.6"
-  resolved "https://registry.yarnpkg.com/@react-native-async-storage/async-storage/-/async-storage-1.15.6.tgz#a4fd461d2d891326e006d2284d060229f6c2b328"
-  integrity sha512-kVfy6O5Xbce9GfD9Islxn5JaOczNz6dF3Ce/7tP4foVLPNwo7UfdgXeKZ7iac07ZbvDvViSUuNyzzrN81FgqkQ==
+  version "1.15.5"
+  resolved "https://registry.yarnpkg.com/@react-native-async-storage/async-storage/-/async-storage-1.15.5.tgz#0d221a5ef1cd7a6494a42fcaad43136d68379afb"
+  integrity sha512-4AYehLH39B9a8UXCMf3ieOK+G61wGMP72ikx6/XSMA0DUnvx0PgaeaT2Wyt06kTrDTy8edewKnbrbeqwaM50TQ==
   dependencies:
-    merge-options "^3.0.4"
+    deep-assign "^3.0.0"
 
 "@react-native-community/cli-debugger-ui@^5.0.1":
   version "5.0.1"
@@ -2223,54 +2223,40 @@
   resolved "https://registry.yarnpkg.com/@react-native/polyfills/-/polyfills-1.0.0.tgz#05bb0031533598f9458cf65a502b8df0eecae780"
   integrity sha512-0jbp4RxjYopTsIdLl+/Fy2TiwVYHy4mgeu07DG4b/LyM0OS/+lPP5c9sbnt/AMlnF6qz2JRZpPpGw1eMNS6A4w==
 
-"@react-navigation/core@^6.0.1":
-  version "6.0.1"
-  resolved "https://registry.yarnpkg.com/@react-navigation/core/-/core-6.0.1.tgz#4424ee1f83e2e305ef80d27c2778fb82fba852a0"
-  integrity sha512-mVdvBDYdz8uzLQHokmVdX/xC4rS7NIkD1FN/yaGdovVzYApAhM+UGd3w1zskjyCSyXaVHHOwV59ZGVew+84xfQ==
+"@react-navigation/core@^5.15.2":
+  version "5.15.5"
+  resolved "https://registry.yarnpkg.com/@react-navigation/core/-/core-5.15.5.tgz#9b5a534ed101df8a18a89356f3fa1d8e5f6e3826"
+  integrity sha512-xrUQ0xVQTMuuMiILRhhRpBzoI4TaFh4dJ4INCy6uwK9dwHjLwtsx+++ZefV/K4tbMQmGFxq4zSnLtTRtfMZKrA==
   dependencies:
-    "@react-navigation/routers" "^6.0.1"
+    "@react-navigation/routers" "^5.7.4"
     escape-string-regexp "^4.0.0"
-    nanoid "^3.1.23"
-    query-string "^7.0.0"
+    nanoid "^3.1.15"
+    query-string "^6.13.6"
     react-is "^16.13.0"
 
-"@react-navigation/elements@^1.0.4":
-  version "1.0.4"
-  resolved "https://registry.yarnpkg.com/@react-navigation/elements/-/elements-1.0.4.tgz#7694473716ebb8b5d69523bc75924d81955e19a8"
-  integrity sha512-WtaQXZ1y0aVQlQegyS2quOeSSqBvASZThdruW9AAgVbqs6qJMwbKjE5SOEsZS2jQX8OoeZNz+8bJHqVflynunw==
-
-"@react-navigation/native-stack@^6.0.2":
-  version "6.0.5"
-  resolved "https://registry.yarnpkg.com/@react-navigation/native-stack/-/native-stack-6.0.5.tgz#38d8b827b2215d18a2180764a00a139eccee75ab"
-  integrity sha512-2gYLzs71D2PJk7SKzDZjMjc2lrwUytYGnR6QQhBlLtGm54R6DKyMtmisxMMz1KzMlI9JhtawVxSZ5SHP2VlSlA==
-  dependencies:
-    "@react-navigation/elements" "^1.0.4"
-    warn-once "^0.1.0"
-
-"@react-navigation/native@~6.0.1":
-  version "6.0.2"
-  resolved "https://registry.yarnpkg.com/@react-navigation/native/-/native-6.0.2.tgz#6bdb3cfafb6a9cfb603c1555dd61faafca35b7c2"
-  integrity sha512-HDqEwgvQ4Cu16vz8jQ55lfyNK9CGbECI1wM9cPOcUa+gkOQEDZ/95VFfFjGGflXZs3ybPvGXlMC4ZAyh1CcO6w==
+"@react-navigation/native@5.9.3":
+  version "5.9.3"
+  resolved "https://registry.yarnpkg.com/@react-navigation/native/-/native-5.9.3.tgz#3859f439adc9a744b79a98fbc7606bdd459574d5"
+  integrity sha512-xaRlCDRVuFGxHsP/IetwLdNvLJwIJBYCUIx/ufWs6QkT9Q0EB0DtKzXCItuHydjMEVPd1Cy7lfjUlSM6hZ6Q3Q==
   dependencies:
-    "@react-navigation/core" "^6.0.1"
+    "@react-navigation/core" "^5.15.2"
     escape-string-regexp "^4.0.0"
-    nanoid "^3.1.23"
+    nanoid "^3.1.15"
 
-"@react-navigation/routers@^6.0.1":
-  version "6.0.1"
-  resolved "https://registry.yarnpkg.com/@react-navigation/routers/-/routers-6.0.1.tgz#ae50f07c776c18bd9fdc87f17e9f3afc3fd59d19"
-  integrity sha512-5ctB49rmtTRQuTSBVgqMsEzBUjPP2ByUzBjNivA7jmvk+PDCl4oZsiR8KAm/twhxe215GYThfi2vUWXKAg6EEQ==
+"@react-navigation/routers@^5.7.4":
+  version "5.7.4"
+  resolved "https://registry.yarnpkg.com/@react-navigation/routers/-/routers-5.7.4.tgz#8b5460e841a0c64f6c9a5fbc2a1eb832432d4fb0"
+  integrity sha512-0N202XAqsU/FlE53Nmh6GHyMtGm7g6TeC93mrFAFJOqGRKznT0/ail+cYlU6tNcPA9AHzZu1Modw1eoDINSliQ==
   dependencies:
-    nanoid "^3.1.23"
+    nanoid "^3.1.15"
 
-"@react-navigation/stack@~6.0.1":
-  version "6.0.6"
-  resolved "https://registry.yarnpkg.com/@react-navigation/stack/-/stack-6.0.6.tgz#6dabf0e6a318b3b07a9d2b41490cf38319e32a20"
-  integrity sha512-2yaY0RLkZoakyou9mKdUA1UqJmyldPCtXMsOUyjCncW7PmKToAusYZbgDAIrQQB97u+/yUtvYbEQsFyQQO+rNw==
+"@react-navigation/stack@5.12.8":
+  version "5.12.8"
+  resolved "https://registry.yarnpkg.com/@react-navigation/stack/-/stack-5.12.8.tgz#31e54e05d8a3ffaaa3e39a1a9b7969f8316a35bf"
+  integrity sha512-wUJFbU0v606RBXOUxHToCXJNmiwxtFYhN2TFvjxCZ3PJU+OWWx8HTmn99pT3rVH4Ax2cfO5BDUy9v+r74ZrIWw==
   dependencies:
-    "@react-navigation/elements" "^1.0.4"
     color "^3.1.3"
-    warn-once "^0.1.0"
+    react-native-iphone-x-helper "^1.3.0"
 
 "@sideway/address@^4.1.0":
   version "4.1.2"
@@ -3240,9 +3226,9 @@
     "@types/react" "*"
 
 "@types/react@*":
-  version "17.0.18"
-  resolved "https://registry.yarnpkg.com/@types/react/-/react-17.0.18.tgz#4109cbbd901be9582e5e39e3d77acd7b66bb7fbe"
-  integrity sha512-YTLgu7oS5zvSqq49X5Iue5oAbVGhgPc5Au29SJC4VeE17V6gASoOxVkUDy9pXFMRFxCWCD9fLeweNFizo3UzOg==
+  version "17.0.17"
+  resolved "https://registry.yarnpkg.com/@types/react/-/react-17.0.17.tgz#1772d3d5425128e0635a716f49ef57c2955df055"
+  integrity sha512-nrfi7I13cAmrd0wje8czYpf5SFbryczCtPzFc6ijqvdjKcyA3tCvGxwchOUlxb2ucBPuJ9Y3oUqKrRqZvrz0lw==
   dependencies:
     "@types/prop-types" "*"
     "@types/scheduler" "*"
@@ -6300,6 +6286,13 @@ decode-uri-component@^0.2.0:
   resolved "https://registry.yarnpkg.com/decode-uri-component/-/decode-uri-component-0.2.0.tgz#eb3913333458775cb84cd1a1fae062106bb87545"
   integrity sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=
 
+deep-assign@^3.0.0:
+  version "3.0.0"
+  resolved "https://registry.yarnpkg.com/deep-assign/-/deep-assign-3.0.0.tgz#c8e4c4d401cba25550a2f0f486a2e75bc5f219a2"
+  integrity sha512-YX2i9XjJ7h5q/aQ/IM9PEwEnDqETAIYbggmdDB3HLTlSgo1CxPsj6pvhPG68rq6SVE0+p+6Ywsm5fTYNrYtBWw==
+  dependencies:
+    is-obj "^1.0.0"
+
 deep-equal@^1.1.1:
   version "1.1.1"
   resolved "https://registry.yarnpkg.com/deep-equal/-/deep-equal-1.1.1.tgz#b5c98c942ceffaf7cb051e24e1434a25a2e6076a"
@@ -6679,9 +6672,9 @@ ejs@^3.1.2:
     jake "^10.6.1"
 
 electron-to-chromium@^1.3.247, electron-to-chromium@^1.3.378, electron-to-chromium@^1.3.793:
-  version "1.3.807"
-  resolved "https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.3.807.tgz#c2eb803f4f094869b1a24151184ffbbdbf688b1f"
-  integrity sha512-p8uxxg2a23zRsvQ2uwA/OOI+O4BQxzaR7YKMIGGGQCpYmkFX2CVF5f0/hxLMV7yCr7nnJViCwHLhPfs52rIYCA==
+  version "1.3.805"
+  resolved "https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.3.805.tgz#a0873393a3b027ec60bdaf22a19c4946688cf941"
+  integrity sha512-uUJF59M6pNSRHQaXwdkaNB4BhSQ9lldRdG1qCjlrAFkynPGDc5wPoUcYEQQeQGmKyAWJPvGkYAWmtVrxWmDAkg==
 
 element-resize-detector@^1.2.1:
   version "1.2.3"
@@ -6943,9 +6936,9 @@ eslint-config-standard@16.0.2:
   integrity sha512-fx3f1rJDsl9bY7qzyX8SAtP8GBSk6MfXFaTfaGgk12aAYW4gJSyRm7dM790L6cbXv63fvjY4XeSzXnb4WM+SKw==
 
 eslint-import-resolver-node@^0.3.4:
-  version "0.3.6"
-  resolved "https://registry.yarnpkg.com/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.6.tgz#4048b958395da89668252001dbd9eca6b83bacbd"
-  integrity sha512-0En0w03NRVMn9Uiyn8YRPDKvWjxCWkslUEhGNTdGx15RvPJYQ+lbOlqrlNI2vEAs4pDYK4f/HN2TbDmk5TP0iw==
+  version "0.3.5"
+  resolved "https://registry.yarnpkg.com/eslint-import-resolver-node/-/eslint-import-resolver-node-0.3.5.tgz#939bbb0f74e179e757ca87f7a4a890dabed18ac4"
+  integrity sha512-XMoPKjSpXbkeJ7ZZ9icLnJMTY5Mc1kZbCakHquaFsXPpyWOwK0TK6CODO+0ca54UoM9LKOxyUNnoVZRl8TeaAg==
   dependencies:
     debug "^3.2.7"
     resolve "^1.20.0"
@@ -7319,11 +7312,6 @@ expo-image-loader@~1.3.0:
   resolved "https://registry.yarnpkg.com/expo-image-loader/-/expo-image-loader-1.3.0.tgz#06982a1a02f443ba6afa2cc7a4f0ccebc26a5415"
   integrity sha512-kn+9hm42TtHi1wFEp/1nq63vp33/cIbypI2hYjGsL22PAC9yk1go1hs/ktKgVWVlgmi0ruwR09SrM6ndOs7s7w==
 
-expo-linear-gradient@^9.2.0:
-  version "9.2.0"
-  resolved "https://registry.yarnpkg.com/expo-linear-gradient/-/expo-linear-gradient-9.2.0.tgz#5ae16fcb8f141b1c51dc36bd4493dfd6566a9511"
-  integrity sha512-LnW2u9OT6GeyC6T8qEGjFYfNSk4KIBAwU0aRSjM4Y8hckWqhtKngGDz46DqGmJBzvZMSKuZZvj5xKn794r54ag==
-
 expo-localization@9.1.0:
   version "9.1.0"
   resolved "https://registry.yarnpkg.com/expo-localization/-/expo-localization-9.1.0.tgz#463381568082fdcb28ad4e4c533a6f9471a3f78a"
@@ -9181,6 +9169,11 @@ is-number@^7.0.0:
   resolved "https://registry.yarnpkg.com/is-number/-/is-number-7.0.0.tgz#7535345b896734d5f80c4d06c50955527a14f12b"
   integrity sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==
 
+is-obj@^1.0.0:
+  version "1.0.1"
+  resolved "https://registry.yarnpkg.com/is-obj/-/is-obj-1.0.1.tgz#3e4729ac1f5fde025cd7d83a896dab9f4f67db0f"
+  integrity sha1-PkcprB9f3gJc19g6iW2rn09n2w8=
+
 is-plain-obj@^2.1.0:
   version "2.1.0"
   resolved "https://registry.yarnpkg.com/is-plain-obj/-/is-plain-obj-2.1.0.tgz#45e42e37fccf1f40da8e5f76ee21515840c09287"
@@ -10720,13 +10713,6 @@ merge-descriptors@1.0.1:
   resolved "https://registry.yarnpkg.com/merge-descriptors/-/merge-descriptors-1.0.1.tgz#b00aaa556dd8b44568150ec9d1b953f3f90cbb61"
   integrity sha1-sAqqVW3YtEVoFQ7J0blT8/kMu2E=
 
-merge-options@^3.0.4:
-  version "3.0.4"
-  resolved "https://registry.yarnpkg.com/merge-options/-/merge-options-3.0.4.tgz#84709c2aa2a4b24c1981f66c179fe5565cc6dbb7"
-  integrity sha512-2Sug1+knBjkaMsMgf1ctR1Ujx+Ayku4EdJN4Z+C2+JzoeF7A3OZ9KM2GY0CpQS51NR61LTurMJrRKPhSs3ZRTQ==
-  dependencies:
-    is-plain-obj "^2.1.0"
-
 merge-stream@^2.0.0:
   version "2.0.0"
   resolved "https://registry.yarnpkg.com/merge-stream/-/merge-stream-2.0.0.tgz#52823629a14dd00c9770fb6ad47dc6310f2c1f60"
@@ -11266,7 +11252,7 @@ nan@^2.12.1, nan@^2.14.0:
   resolved "https://registry.yarnpkg.com/nan/-/nan-2.15.0.tgz#3f34a473ff18e15c1b5626b62903b5ad6e665fee"
   integrity sha512-8ZtvEnA2c5aYCZYd1cvgdnU6cqwixRoYg70xPLWUws5ORTa/lnw+u4amixRS/Ac5U5mQVgp9pnlSUnbNWFaWZQ==
 
-nanoid@^3.1.23:
+nanoid@^3.1.15:
   version "3.1.25"
   resolved "https://registry.yarnpkg.com/nanoid/-/nanoid-3.1.25.tgz#09ca32747c0e543f0e1814b7d3793477f9c8e152"
   integrity sha512-rdwtIXaXCLFAQbnfqDRnI6jaRHp9fTcYBjtFKE8eezcZ7LuLjhUaQGNeMXf1HmRoCH32CLz6XwX0TtxEOS/A3Q==
@@ -12874,10 +12860,10 @@ query-string@6.10.1:
     split-on-first "^1.0.0"
     strict-uri-encode "^2.0.0"
 
-query-string@^7.0.0:
-  version "7.0.1"
-  resolved "https://registry.yarnpkg.com/query-string/-/query-string-7.0.1.tgz#45bd149cf586aaa582dffc7ec7a8ad97dd02f75d"
-  integrity sha512-uIw3iRvHnk9to1blJCG3BTc+Ro56CBowJXKmNNAm3RulvPBzWLRqKSiiDk+IplJhsydwtuNMHi8UGQFcCLVfkA==
+query-string@^6.13.6:
+  version "6.14.1"
+  resolved "https://registry.yarnpkg.com/query-string/-/query-string-6.14.1.tgz#7ac2dca46da7f309449ba0f86b1fd28255b0c86a"
+  integrity sha512-XDxAeVmpfu1/6IjyT/gXHOl+S0vQ9owggJ30hhWKdHAsNPOcasn5o9BW0eejZqL2e4vMjhAxoW3jVHcD6mbcYw==
   dependencies:
     decode-uri-component "^0.2.0"
     filter-obj "^1.1.0"
@@ -13085,9 +13071,9 @@ react-devtools-core@4.10.1:
     ws "^7"
 
 react-devtools-core@^4.6.0:
-  version "4.16.0"
-  resolved "https://registry.yarnpkg.com/react-devtools-core/-/react-devtools-core-4.16.0.tgz#c640ab15b98d077bc47f10f84fc8ed3633f537bd"
-  integrity sha512-fqyVbp+wVVey6O4uVBk5s3J/vTiPludp7lulr6a8asTBm7DIA0vLBbjmAOLCnOlkWcgdy4mjsqOgNCbu8uICWw==
+  version "4.15.0"
+  resolved "https://registry.yarnpkg.com/react-devtools-core/-/react-devtools-core-4.15.0.tgz#c0fa2a0a1c966bef2705d52aacee3f143cfac092"
+  integrity sha512-Y1NwrWSKRg4TtwcES2upzXFDmccAW9jrGQG2D8EGQrZhK+0hmuhgFnSdKpFc3z04CSeDT5t83RMXcmX5TkR1dA==
   dependencies:
     shell-quote "^1.6.1"
     ws "^7"
@@ -13204,6 +13190,11 @@ react-native-gesture-handler@1.10.3:
     invariant "^2.2.4"
     prop-types "^15.7.2"
 
+react-native-iphone-x-helper@^1.3.0:
+  version "1.3.1"
+  resolved "https://registry.yarnpkg.com/react-native-iphone-x-helper/-/react-native-iphone-x-helper-1.3.1.tgz#20c603e9a0e765fd6f97396638bdeb0e5a60b010"
+  integrity sha512-HOf0jzRnq2/aFUcdCJ9w9JGzN3gdEg0zFE4FyYlp4jtidqU03D5X7ZegGKfT1EWteR0gPBGp9ye5T5FvSWi9Yg==
+
 react-native-keychain@6.2.0:
   version "6.2.0"
   resolved "https://registry.yarnpkg.com/react-native-keychain/-/react-native-keychain-6.2.0.tgz#8f4cff503aad367141db5aea0189ead9240c28ff"
@@ -15873,11 +15864,6 @@ walker@^1.0.7, walker@~1.0.5:
   dependencies:
     makeerror "1.0.x"
 
-warn-once@^0.1.0:
-  version "0.1.0"
-  resolved "https://registry.yarnpkg.com/warn-once/-/warn-once-0.1.0.tgz#4f58d89b84f968d0389176aa99e0cf0f14ffd4c8"
-  integrity sha512-recZTSvuaH/On5ZU5ywq66y99lImWqzP93+AiUo9LUwG8gXHW+LJjhOd6REJHm7qb0niYqrEQJvbHSQfuJtTqA==
-
 warning-symbol@^0.1.0:
   version "0.1.0"
   resolved "https://registry.yarnpkg.com/warning-symbol/-/warning-symbol-0.1.0.tgz#bb31dd11b7a0f9d67ab2ed95f457b65825bbad21"
