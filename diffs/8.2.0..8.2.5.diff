diff --git a/IgniteDiffApp/app/components/Screen.tsx b/IgniteDiffApp/app/components/Screen.tsx
index 1c4ea39..c3c46b3 100644
--- a/IgniteDiffApp/app/components/Screen.tsx
+++ b/IgniteDiffApp/app/components/Screen.tsx
@@ -11,7 +11,7 @@ import {
   ViewStyle,
 } from "react-native"
 import { StatusBar, StatusBarProps } from "expo-status-bar"
-import { Edge, SafeAreaView, SafeAreaViewProps } from "react-native-safe-area-context"
+import { Edge, useSafeAreaInsets } from "react-native-safe-area-context"
 import { useScrollToTop } from "@react-navigation/native"
 import { colors } from "../theme"
 
@@ -44,10 +44,6 @@ interface BaseScreenProps {
    * By how much should we offset the keyboard? Defaults to 0.
    */
   keyboardOffset?: number
-  /**
-   * Pass any additional props directly to the SafeAreaView component.
-   */
-  SafeAreaViewProps?: SafeAreaViewProps
   /**
    * Pass any additional props directly to the StatusBar component.
    */
@@ -141,6 +137,18 @@ function useAutoPreset(props: AutoScreenProps) {
   }
 }
 
+function useSafeAreaInsetPadding(safeAreaEdges?: Edge[]) {
+  const insets = useSafeAreaInsets()
+
+  const insetStyles: ViewStyle = {}
+  safeAreaEdges?.forEach((edge: Edge) => {
+    const paddingProp = `padding${edge.charAt(0).toUpperCase()}${edge.slice(1)}`
+    insetStyles[paddingProp] = insets[edge]
+  })
+
+  return insetStyles
+}
+
 function ScreenWithoutScrolling(props: ScreenProps) {
   const { style, contentContainerStyle, children } = props
   return (
@@ -197,19 +205,14 @@ export function Screen(props: ScreenProps) {
     KeyboardAvoidingViewProps,
     keyboardOffset = 0,
     safeAreaEdges,
-    SafeAreaViewProps,
     StatusBarProps,
     statusBarStyle = "dark",
   } = props
 
-  const Wrapper = safeAreaEdges?.length ? SafeAreaView : View
+  const insetPadding = useSafeAreaInsetPadding(safeAreaEdges)
 
   return (
-    <Wrapper
-      edges={safeAreaEdges}
-      {...SafeAreaViewProps}
-      style={[$safeAreaStyle, SafeAreaViewProps?.style, { backgroundColor }]}
-    >
+    <View style={[$containerStyle, { backgroundColor }, insetPadding]}>
       <StatusBar style={statusBarStyle} {...StatusBarProps} />
 
       <KeyboardAvoidingView
@@ -224,11 +227,11 @@ export function Screen(props: ScreenProps) {
           <ScreenWithScrolling {...props} />
         )}
       </KeyboardAvoidingView>
-    </Wrapper>
+    </View>
   )
 }
 
-const $safeAreaStyle: ViewStyle = {
+const $containerStyle: ViewStyle = {
   flex: 1,
   height: "100%",
   width: "100%",
diff --git a/IgniteDiffApp/app/i18n/ar.ts b/IgniteDiffApp/app/i18n/ar.ts
index a1bd46a..6567054 100644
--- a/IgniteDiffApp/app/i18n/ar.ts
+++ b/IgniteDiffApp/app/i18n/ar.ts
@@ -5,13 +5,13 @@ const ar: Translations = {
     ok: "نعم",
     cancel: "حذف",
     back: "خلف",
+    logOut: "تسجيل خروج", // @demo remove-current-line
   },
   welcomeScreen: {
     postscript:
       "ربما لا يكون هذا هو الشكل الذي يبدو عليه تطبيقك مالم يمنحك المصمم هذه الشاشات وشحنها في هذه الحالة",
     readyForLaunch: "تطبيقك تقريبا جاهز للتشغيل",
     exciting: "اوه هذا مثير",
-    headerRight: "تسجيل خروج", // @demo remove-current-line
     letsGo: "لنذهب", // @demo remove-current-line
   },
   errorScreen: {
diff --git a/IgniteDiffApp/app/i18n/en.ts b/IgniteDiffApp/app/i18n/en.ts
index 70d12b5..3acae53 100644
--- a/IgniteDiffApp/app/i18n/en.ts
+++ b/IgniteDiffApp/app/i18n/en.ts
@@ -3,13 +3,13 @@ const en = {
     ok: "OK!",
     cancel: "Cancel",
     back: "Back",
+    logOut: "Log Out", // @demo remove-current-line
   },
   welcomeScreen: {
     postscript:
       "psst  — This probably isn't what your app looks like. (Unless your designer handed you these screens, and in that case, ship it!)",
     readyForLaunch: "Your app, almost ready for launch!",
     exciting: "(ohh, this is exciting!)",
-    headerRight: "Log Out", // @demo remove-current-line
     letsGo: "Let's go!", // @demo remove-current-line
   },
   errorScreen: {
diff --git a/IgniteDiffApp/app/i18n/ko.ts b/IgniteDiffApp/app/i18n/ko.ts
index 407d326..8226b4a 100644
--- a/IgniteDiffApp/app/i18n/ko.ts
+++ b/IgniteDiffApp/app/i18n/ko.ts
@@ -5,13 +5,13 @@ const ko: Translations = {
     ok: "확인!",
     cancel: "취소",
     back: "뒤로",
+    logOut: "로그아웃", // @demo remove-current-line
   },
   welcomeScreen: {
     postscript:
       "잠깐! — 지금 보시는 것은 아마도 당신의 앱의 모양새가 아닐겁니다. (디자이너분이 이렇게 건내주셨다면 모를까요. 만약에 그렇다면, 이대로 가져갑시다!) ",
     readyForLaunch: "출시 준비가 거의 끝난 나만의 앱!",
     exciting: "(오, 이거 신나는데요!)",
-    headerRight: "로그아웃", // @demo remove-current-line
     letsGo: "가보자구요!", // @demo remove-current-line
   },
   errorScreen: {
diff --git a/IgniteDiffApp/app/models/AuthenticationStore.ts b/IgniteDiffApp/app/models/AuthenticationStore.ts
index 45181bf..44c87d6 100644
--- a/IgniteDiffApp/app/models/AuthenticationStore.ts
+++ b/IgniteDiffApp/app/models/AuthenticationStore.ts
@@ -38,6 +38,11 @@ export const AuthenticationStoreModel = types
     setAuthPassword(value: string) {
       store.authPassword = value.replace(/ /g, "")
     },
+    logout() {
+      store.authToken = undefined
+      store.authEmail = ""
+      store.authPassword = ""
+    },
   }))
 
 export interface AuthenticationStore extends Instance<typeof AuthenticationStoreModel> {}
diff --git a/IgniteDiffApp/app/navigators/DemoNavigator.tsx b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
index ee054cd..c0d985b 100644
--- a/IgniteDiffApp/app/navigators/DemoNavigator.tsx
+++ b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
@@ -53,15 +53,6 @@ export function DemoNavigator() {
         }}
       />
 
-      <Tab.Screen
-        name="DemoDebug"
-        component={DemoDebugScreen}
-        options={{
-          tabBarLabel: translate("demoNavigator.debugTab"),
-          tabBarIcon: ({ focused }) => <Icon icon="debug" color={focused && colors.tint} />,
-        }}
-      />
-
       <Tab.Screen
         name="DemoCommunity"
         component={DemoCommunityScreen}
@@ -79,6 +70,15 @@ export function DemoNavigator() {
           tabBarIcon: ({ focused }) => <Icon icon="podcast" color={focused && colors.tint} />,
         }}
       />
+
+      <Tab.Screen
+        name="DemoDebug"
+        component={DemoDebugScreen}
+        options={{
+          tabBarLabel: translate("demoNavigator.debugTab"),
+          tabBarIcon: ({ focused }) => <Icon icon="debug" color={focused && colors.tint} />,
+        }}
+      />
     </Tab.Navigator>
   )
 }
diff --git a/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx b/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx
index c2ea684..4add235 100644
--- a/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoCommunityScreen.tsx
@@ -1,4 +1,4 @@
-import React from "react"
+import React, { FC } from "react"
 import { Image, ImageStyle, TextStyle, View, ViewStyle } from "react-native"
 import { ListItem, Screen, Text } from "../components"
 import { DemoTabScreenProps } from "../navigators/DemoNavigator"
@@ -11,93 +11,94 @@ const reactNativeLiveLogo = require("../../assets/images/rnl-logo.png")
 const reactNativeRadioLogo = require("../../assets/images/rnr-logo.png")
 const reactNativeNewsletterLogo = require("../../assets/images/rnn-logo.png")
 
-export function DemoCommunityScreen(_props: DemoTabScreenProps<"DemoCommunity">) {
-  return (
-    <Screen preset="scroll" contentContainerStyle={$container} safeAreaEdges={["top"]}>
-      <Text preset="heading" tx="demoCommunityScreen.title" style={$title} />
-      <Text tx="demoCommunityScreen.tagLine" style={$tagline} />
+export const DemoCommunityScreen: FC<DemoTabScreenProps<"DemoCommunity">> =
+  function DemoCommunityScreen(_props) {
+    return (
+      <Screen preset="scroll" contentContainerStyle={$container} safeAreaEdges={["top"]}>
+        <Text preset="heading" tx="demoCommunityScreen.title" style={$title} />
+        <Text tx="demoCommunityScreen.tagLine" style={$tagline} />
 
-      <Text preset="subheading" tx="demoCommunityScreen.joinUsOnSlackTitle" />
-      <Text tx="demoCommunityScreen.joinUsOnSlack" style={$description} />
-      <ListItem
-        tx="demoCommunityScreen.joinSlackLink"
-        leftIcon="slack"
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        onPress={() => openLinkInBrowser("https://community.infinite.red/")}
-      />
-      <Text
-        preset="subheading"
-        tx="demoCommunityScreen.makeIgniteEvenBetterTitle"
-        style={$sectionTitle}
-      />
-      <Text tx="demoCommunityScreen.makeIgniteEvenBetter" style={$description} />
-      <ListItem
-        tx="demoCommunityScreen.contributeToIgniteLink"
-        leftIcon="github"
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        onPress={() => openLinkInBrowser("https://github.com/infinitered/ignite")}
-      />
+        <Text preset="subheading" tx="demoCommunityScreen.joinUsOnSlackTitle" />
+        <Text tx="demoCommunityScreen.joinUsOnSlack" style={$description} />
+        <ListItem
+          tx="demoCommunityScreen.joinSlackLink"
+          leftIcon="slack"
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          onPress={() => openLinkInBrowser("https://community.infinite.red/")}
+        />
+        <Text
+          preset="subheading"
+          tx="demoCommunityScreen.makeIgniteEvenBetterTitle"
+          style={$sectionTitle}
+        />
+        <Text tx="demoCommunityScreen.makeIgniteEvenBetter" style={$description} />
+        <ListItem
+          tx="demoCommunityScreen.contributeToIgniteLink"
+          leftIcon="github"
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          onPress={() => openLinkInBrowser("https://github.com/infinitered/ignite")}
+        />
 
-      <Text
-        preset="subheading"
-        tx="demoCommunityScreen.theLatestInReactNativeTitle"
-        style={$sectionTitle}
-      />
-      <Text tx="demoCommunityScreen.theLatestInReactNative" style={$description} />
-      <ListItem
-        tx="demoCommunityScreen.reactNativeRadioLink"
-        bottomSeparator
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        LeftComponent={
-          <View style={$logoContainer}>
-            <Image source={reactNativeRadioLogo} style={$logo} />
-          </View>
-        }
-        onPress={() => openLinkInBrowser("https://reactnativeradio.com/")}
-      />
-      <ListItem
-        tx="demoCommunityScreen.reactNativeNewsletterLink"
-        bottomSeparator
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        LeftComponent={
-          <View style={$logoContainer}>
-            <Image source={reactNativeNewsletterLogo} style={$logo} />
-          </View>
-        }
-        onPress={() => openLinkInBrowser("https://reactnativenewsletter.com/")}
-      />
-      <ListItem
-        tx="demoCommunityScreen.reactNativeLiveLink"
-        bottomSeparator
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        LeftComponent={
-          <View style={$logoContainer}>
-            <Image source={reactNativeLiveLogo} style={$logo} />
-          </View>
-        }
-        onPress={() => openLinkInBrowser("https://rn.live/")}
-      />
-      <ListItem
-        tx="demoCommunityScreen.chainReactConferenceLink"
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        LeftComponent={
-          <View style={$logoContainer}>
-            <Image source={chainReactLogo} style={$logo} />
-          </View>
-        }
-        onPress={() => openLinkInBrowser("https://cr.infinite.red/")}
-      />
-      <Text preset="subheading" tx="demoCommunityScreen.hireUsTitle" style={$sectionTitle} />
-      <Text tx="demoCommunityScreen.hireUs" style={$description} />
-      <ListItem
-        tx="demoCommunityScreen.hireUsLink"
-        leftIcon="clap"
-        rightIcon={isRTL ? "caretLeft" : "caretRight"}
-        onPress={() => openLinkInBrowser("https://infinite.red/contact")}
-      />
-    </Screen>
-  )
-}
+        <Text
+          preset="subheading"
+          tx="demoCommunityScreen.theLatestInReactNativeTitle"
+          style={$sectionTitle}
+        />
+        <Text tx="demoCommunityScreen.theLatestInReactNative" style={$description} />
+        <ListItem
+          tx="demoCommunityScreen.reactNativeRadioLink"
+          bottomSeparator
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          LeftComponent={
+            <View style={$logoContainer}>
+              <Image source={reactNativeRadioLogo} style={$logo} />
+            </View>
+          }
+          onPress={() => openLinkInBrowser("https://reactnativeradio.com/")}
+        />
+        <ListItem
+          tx="demoCommunityScreen.reactNativeNewsletterLink"
+          bottomSeparator
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          LeftComponent={
+            <View style={$logoContainer}>
+              <Image source={reactNativeNewsletterLogo} style={$logo} />
+            </View>
+          }
+          onPress={() => openLinkInBrowser("https://reactnativenewsletter.com/")}
+        />
+        <ListItem
+          tx="demoCommunityScreen.reactNativeLiveLink"
+          bottomSeparator
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          LeftComponent={
+            <View style={$logoContainer}>
+              <Image source={reactNativeLiveLogo} style={$logo} />
+            </View>
+          }
+          onPress={() => openLinkInBrowser("https://rn.live/")}
+        />
+        <ListItem
+          tx="demoCommunityScreen.chainReactConferenceLink"
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          LeftComponent={
+            <View style={$logoContainer}>
+              <Image source={chainReactLogo} style={$logo} />
+            </View>
+          }
+          onPress={() => openLinkInBrowser("https://cr.infinite.red/")}
+        />
+        <Text preset="subheading" tx="demoCommunityScreen.hireUsTitle" style={$sectionTitle} />
+        <Text tx="demoCommunityScreen.hireUs" style={$description} />
+        <ListItem
+          tx="demoCommunityScreen.hireUsLink"
+          leftIcon="clap"
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+          onPress={() => openLinkInBrowser("https://infinite.red/contact")}
+        />
+      </Screen>
+    )
+  }
 
 const $container: ViewStyle = {
   paddingTop: spacing.large + spacing.extraLarge,
diff --git a/IgniteDiffApp/app/screens/DemoDebugScreen.tsx b/IgniteDiffApp/app/screens/DemoDebugScreen.tsx
index bad5c8f..0294d75 100644
--- a/IgniteDiffApp/app/screens/DemoDebugScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoDebugScreen.tsx
@@ -1,16 +1,23 @@
-import React from "react"
+import React, { FC } from "react"
 import * as Application from "expo-application"
 import { Linking, Platform, TextStyle, View, ViewStyle } from "react-native"
 import { Button, ListItem, Screen, Text } from "../components"
 import { DemoTabScreenProps } from "../navigators/DemoNavigator"
 import { colors, spacing } from "../theme"
 import { isRTL } from "../i18n"
+import { useStores } from "../models"
 
 function openLinkInBrowser(url: string) {
   Linking.canOpenURL(url).then((canOpen) => canOpen && Linking.openURL(url))
 }
 
-export function DemoDebugScreen(_props: DemoTabScreenProps<"DemoDebug">) {
+export const DemoDebugScreen: FC<DemoTabScreenProps<"DemoDebug">> = function DemoDebugScreen(
+  _props,
+) {
+  const {
+    authenticationStore: { logout },
+  } = useStores()
+
   const usingHermes = typeof HermesInternal === "object" && HermesInternal !== null
 
   const demoReactotron = React.useMemo(
@@ -84,6 +91,9 @@ export function DemoDebugScreen(_props: DemoTabScreenProps<"DemoDebug">) {
         <Button style={$button} tx="demoDebugScreen.reactotron" onPress={demoReactotron} />
         <Text style={$hint} tx={`demoDebugScreen.${Platform.OS}ReactotronHint` as const} />
       </View>
+      <View style={$buttonContainer}>
+        <Button style={$button} tx="common.logOut" onPress={logout} />
+      </View>
     </Screen>
   )
 }
diff --git a/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx b/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
index 6ba3753..ef4f989 100644
--- a/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
@@ -1,5 +1,5 @@
 import { observer } from "mobx-react-lite"
-import React, { useEffect, useMemo } from "react"
+import React, { FC, useEffect, useMemo } from "react"
 import {
   AccessibilityProps,
   ActivityIndicator,
@@ -35,94 +35,98 @@ const rnrImage2 = require("../../assets/images/rnr-image-2.png")
 const rnrImage3 = require("../../assets/images/rnr-image-3.png")
 const rnrImages = [rnrImage1, rnrImage2, rnrImage3]
 
-export const DemoPodcastListScreen = observer(function DemoPodcastListScreen(
-  _props: DemoTabScreenProps<"DemoPodcastList">,
-) {
-  const { episodeStore } = useStores()
+export const DemoPodcastListScreen: FC<DemoTabScreenProps<"DemoPodcastList">> = observer(
+  function DemoPodcastListScreen(_props) {
+    const { episodeStore } = useStores()
 
-  const [refreshing, setRefreshing] = React.useState(false)
-  const [isLoading, setIsLoading] = React.useState(false)
+    const [refreshing, setRefreshing] = React.useState(false)
+    const [isLoading, setIsLoading] = React.useState(false)
 
-  // initially, kick off a background refresh without the refreshing UI
-  useEffect(() => {
-    ;(async function load() {
-      setIsLoading(true)
-      await episodeStore.fetchEpisodes()
-      setIsLoading(false)
-    })()
-  }, [episodeStore])
+    // initially, kick off a background refresh without the refreshing UI
+    useEffect(() => {
+      ;(async function load() {
+        setIsLoading(true)
+        await episodeStore.fetchEpisodes()
+        setIsLoading(false)
+      })()
+    }, [episodeStore])
 
-  // simulate a longer refresh, if the refresh is too fast for UX
-  async function manualRefresh() {
-    setRefreshing(true)
-    await Promise.all([episodeStore.fetchEpisodes(), delay(750)])
-    setRefreshing(false)
-  }
+    // simulate a longer refresh, if the refresh is too fast for UX
+    async function manualRefresh() {
+      setRefreshing(true)
+      await Promise.all([episodeStore.fetchEpisodes(), delay(750)])
+      setRefreshing(false)
+    }
 
-  return (
-    <Screen preset="fixed" safeAreaEdges={["top"]} contentContainerStyle={$screenContentContainer}>
-      <FlatList<Episode>
-        data={episodeStore.episodesForList}
-        extraData={episodeStore.favorites.length + episodeStore.episodes.length}
-        contentContainerStyle={$flatListContentContainer}
-        refreshing={refreshing}
-        onRefresh={manualRefresh}
-        ListEmptyComponent={
-          isLoading ? (
-            <ActivityIndicator />
-          ) : (
-            <EmptyState
-              preset="generic"
-              style={$emptyState}
-              headingTx={
-                episodeStore.favoritesOnly
-                  ? "demoPodcastListScreen.noFavoritesEmptyState.heading"
-                  : undefined
-              }
-              contentTx={
-                episodeStore.favoritesOnly
-                  ? "demoPodcastListScreen.noFavoritesEmptyState.content"
-                  : undefined
-              }
-              button={episodeStore.favoritesOnly ? null : undefined}
-              buttonOnPress={manualRefresh}
-              imageStyle={$emptyStateImage}
-              ImageProps={{ resizeMode: "contain" }}
+    return (
+      <Screen
+        preset="fixed"
+        safeAreaEdges={["top"]}
+        contentContainerStyle={$screenContentContainer}
+      >
+        <FlatList<Episode>
+          data={episodeStore.episodesForList}
+          extraData={episodeStore.favorites.length + episodeStore.episodes.length}
+          contentContainerStyle={$flatListContentContainer}
+          refreshing={refreshing}
+          onRefresh={manualRefresh}
+          ListEmptyComponent={
+            isLoading ? (
+              <ActivityIndicator />
+            ) : (
+              <EmptyState
+                preset="generic"
+                style={$emptyState}
+                headingTx={
+                  episodeStore.favoritesOnly
+                    ? "demoPodcastListScreen.noFavoritesEmptyState.heading"
+                    : undefined
+                }
+                contentTx={
+                  episodeStore.favoritesOnly
+                    ? "demoPodcastListScreen.noFavoritesEmptyState.content"
+                    : undefined
+                }
+                button={episodeStore.favoritesOnly ? null : undefined}
+                buttonOnPress={manualRefresh}
+                imageStyle={$emptyStateImage}
+                ImageProps={{ resizeMode: "contain" }}
+              />
+            )
+          }
+          ListHeaderComponent={
+            <View style={$heading}>
+              <Text preset="heading" tx="demoPodcastListScreen.title" />
+              {(episodeStore.favoritesOnly || episodeStore.episodesForList.length > 0) && (
+                <View style={$toggle}>
+                  <Toggle
+                    value={episodeStore.favoritesOnly}
+                    onValueChange={() =>
+                      episodeStore.setProp("favoritesOnly", !episodeStore.favoritesOnly)
+                    }
+                    variant="switch"
+                    labelTx="demoPodcastListScreen.onlyFavorites"
+                    labelPosition="left"
+                    labelStyle={$labelStyle}
+                    accessibilityLabel={translate("demoPodcastListScreen.accessibility.switch")}
+                  />
+                </View>
+              )}
+            </View>
+          }
+          renderItem={({ item }) => (
+            <EpisodeCard
+              key={item.guid}
+              episode={item}
+              isFavorite={episodeStore.hasFavorite(item)}
+              onPressFavorite={() => episodeStore.toggleFavorite(item)}
             />
-          )
-        }
-        ListHeaderComponent={
-          <View style={$heading}>
-            <Text preset="heading" tx="demoPodcastListScreen.title" />
-            {(episodeStore.favoritesOnly || episodeStore.episodesForList.length > 0) && (
-              <View style={$toggle}>
-                <Toggle
-                  value={episodeStore.favoritesOnly}
-                  onValueChange={() =>
-                    episodeStore.setProp("favoritesOnly", !episodeStore.favoritesOnly)
-                  }
-                  variant="switch"
-                  labelTx="demoPodcastListScreen.onlyFavorites"
-                  labelPosition="left"
-                  labelStyle={$labelStyle}
-                  accessibilityLabel={translate("demoPodcastListScreen.accessibility.switch")}
-                />
-              </View>
-            )}
-          </View>
-        }
-        renderItem={({ item }) => (
-          <EpisodeCard
-            key={item.guid}
-            episode={item}
-            isFavorite={episodeStore.hasFavorite(item)}
-            onPressFavorite={() => episodeStore.toggleFavorite(item)}
-          />
-        )}
-      />
-    </Screen>
-  )
-})
+          )}
+        />
+      </Screen>
+    )
+  },
+)
 
 const EpisodeCard = observer(function EpisodeCard({
   episode,
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
index 2948115..d08b16f 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
@@ -1,4 +1,4 @@
-import React, { ReactElement, useEffect, useRef, useState } from "react"
+import React, { FC, ReactElement, useEffect, useRef, useState } from "react"
 import { FlatList, Image, ImageStyle, SectionList, TextStyle, View, ViewStyle } from "react-native"
 import { DrawerLayout, DrawerState } from "react-native-gesture-handler"
 import { useSharedValue } from "react-native-reanimated"
@@ -18,138 +18,139 @@ export interface Demo {
   data: ReactElement[]
 }
 
-export function DemoShowroomScreen(_props: DemoTabScreenProps<"DemoShowroom">) {
-  const [open, setOpen] = useState(false)
-  const timeout = useRef<ReturnType<typeof setTimeout>>()
-  const drawerRef = useRef<DrawerLayout>()
-  const listRef = useRef<SectionList>()
-  const menuRef = useRef<FlatList>()
-  const progress = useSharedValue(0)
-
-  const toggleDrawer = () => {
-    if (!open) {
-      setOpen(true)
-      drawerRef.current?.openDrawer({ speed: 2 })
-    } else {
-      setOpen(false)
-      drawerRef.current?.closeDrawer({ speed: 2 })
+export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
+  function DemoShowroomScreen(_props) {
+    const [open, setOpen] = useState(false)
+    const timeout = useRef<ReturnType<typeof setTimeout>>()
+    const drawerRef = useRef<DrawerLayout>()
+    const listRef = useRef<SectionList>()
+    const menuRef = useRef<FlatList>()
+    const progress = useSharedValue(0)
+
+    const toggleDrawer = () => {
+      if (!open) {
+        setOpen(true)
+        drawerRef.current?.openDrawer({ speed: 2 })
+      } else {
+        setOpen(false)
+        drawerRef.current?.closeDrawer({ speed: 2 })
+      }
     }
-  }
 
-  const handleScroll = (sectionIndex: number, itemIndex = 0) => {
-    listRef.current.scrollToLocation({
-      animated: true,
-      itemIndex,
-      sectionIndex,
-    })
-    toggleDrawer()
-  }
+    const handleScroll = (sectionIndex: number, itemIndex = 0) => {
+      listRef.current.scrollToLocation({
+        animated: true,
+        itemIndex,
+        sectionIndex,
+      })
+      toggleDrawer()
+    }
 
-  const scrollToIndexFailed = (info: {
-    index: number
-    highestMeasuredFrameIndex: number
-    averageItemLength: number
-  }) => {
-    listRef.current?.getScrollResponder()?.scrollToEnd()
-    timeout.current = setTimeout(
-      () =>
-        listRef.current?.scrollToLocation({
-          animated: true,
-          itemIndex: info.index,
-          sectionIndex: 0,
-        }),
-      50,
-    )
-  }
+    const scrollToIndexFailed = (info: {
+      index: number
+      highestMeasuredFrameIndex: number
+      averageItemLength: number
+    }) => {
+      listRef.current?.getScrollResponder()?.scrollToEnd()
+      timeout.current = setTimeout(
+        () =>
+          listRef.current?.scrollToLocation({
+            animated: true,
+            itemIndex: info.index,
+            sectionIndex: 0,
+          }),
+        50,
+      )
+    }
 
-  useEffect(() => {
-    return () => timeout.current && clearTimeout(timeout.current)
-  }, [])
-
-  return (
-    <DrawerLayout
-      ref={drawerRef}
-      drawerWidth={326}
-      drawerType={"slide"}
-      drawerPosition={isRTL ? "right" : "left"}
-      drawerBackgroundColor={colors.palette.neutral100}
-      overlayColor={colors.palette.overlay20}
-      onDrawerSlide={(drawerProgress) => {
-        progress.value = open ? 1 - drawerProgress : drawerProgress
-      }}
-      onDrawerStateChanged={(newState: DrawerState, drawerWillShow: boolean) => {
-        if (newState === "Settling") {
-          setOpen(drawerWillShow)
-        }
-      }}
-      renderNavigationView={() => (
-        <SafeAreaView style={$drawer} edges={["top"]}>
-          <View style={$logoContainer}>
-            <Image source={logo} style={$logoImage} />
-          </View>
-
-          <FlatList<{ name: string; useCases: string[] }>
-            ref={menuRef}
-            contentContainerStyle={$flatListContentContainer}
-            data={Object.values(Demos).map((d) => ({
-              name: d.name,
-              useCases: d.data.map((u) => u.props.name),
-            }))}
-            keyExtractor={(item) => item.name}
-            renderItem={({ item, index: sectionIndex }) => (
-              <View>
-                <Text
-                  onPress={() => handleScroll(sectionIndex)}
-                  preset="bold"
-                  style={$menuContainer}
-                >
-                  {item.name}
-                </Text>
-                {item.useCases.map((u, index) => (
-                  <ListItem
-                    key={`section${sectionIndex}-${u}`}
-                    onPress={() => handleScroll(sectionIndex, index + 1)}
-                    text={u}
-                    rightIcon={isRTL ? "caretLeft" : "caretRight"}
-                  />
-                ))}
-              </View>
-            )}
-          />
-        </SafeAreaView>
-      )}
-    >
-      <Screen preset="fixed" safeAreaEdges={["top", "bottom"]}>
-        <DrawerIconButton onPress={toggleDrawer} {...{ open, progress }} />
-
-        <SectionList
-          ref={listRef}
-          contentContainerStyle={$sectionListContentContainer}
-          stickySectionHeadersEnabled={false}
-          sections={Object.values(Demos)}
-          renderItem={({ item }) => item}
-          renderSectionFooter={() => <View style={$demoUseCasesSpacer} />}
-          ListHeaderComponent={
-            <View style={$heading}>
-              <Text preset="heading" tx="demoShowroomScreen.jumpStart" />
-            </View>
+    useEffect(() => {
+      return () => timeout.current && clearTimeout(timeout.current)
+    }, [])
+
+    return (
+      <DrawerLayout
+        ref={drawerRef}
+        drawerWidth={326}
+        drawerType={"slide"}
+        drawerPosition={isRTL ? "right" : "left"}
+        drawerBackgroundColor={colors.palette.neutral100}
+        overlayColor={colors.palette.overlay20}
+        onDrawerSlide={(drawerProgress) => {
+          progress.value = open ? 1 - drawerProgress : drawerProgress
+        }}
+        onDrawerStateChanged={(newState: DrawerState, drawerWillShow: boolean) => {
+          if (newState === "Settling") {
+            setOpen(drawerWillShow)
           }
-          onScrollToIndexFailed={scrollToIndexFailed}
-          renderSectionHeader={({ section }) => {
-            return (
-              <View>
-                <Text preset="heading" style={$demoItemName}>
-                  {section.name}
-                </Text>
-                <Text style={$demoItemDescription}>{section.description}</Text>
+        }}
+        renderNavigationView={() => (
+          <SafeAreaView style={$drawer} edges={["top"]}>
+            <View style={$logoContainer}>
+              <Image source={logo} style={$logoImage} />
+            </View>
+
+            <FlatList<{ name: string; useCases: string[] }>
+              ref={menuRef}
+              contentContainerStyle={$flatListContentContainer}
+              data={Object.values(Demos).map((d) => ({
+                name: d.name,
+                useCases: d.data.map((u) => u.props.name),
+              }))}
+              keyExtractor={(item) => item.name}
+              renderItem={({ item, index: sectionIndex }) => (
+                <View>
+                  <Text
+                    onPress={() => handleScroll(sectionIndex)}
+                    preset="bold"
+                    style={$menuContainer}
+                  >
+                    {item.name}
+                  </Text>
+                  {item.useCases.map((u, index) => (
+                    <ListItem
+                      key={`section${sectionIndex}-${u}`}
+                      onPress={() => handleScroll(sectionIndex, index + 1)}
+                      text={u}
+                      rightIcon={isRTL ? "caretLeft" : "caretRight"}
+                    />
+                  ))}
+                </View>
+              )}
+            />
+          </SafeAreaView>
+        )}
+      >
+        <Screen preset="fixed" safeAreaEdges={["top", "bottom"]}>
+          <DrawerIconButton onPress={toggleDrawer} {...{ open, progress }} />
+
+          <SectionList
+            ref={listRef}
+            contentContainerStyle={$sectionListContentContainer}
+            stickySectionHeadersEnabled={false}
+            sections={Object.values(Demos)}
+            renderItem={({ item }) => item}
+            renderSectionFooter={() => <View style={$demoUseCasesSpacer} />}
+            ListHeaderComponent={
+              <View style={$heading}>
+                <Text preset="heading" tx="demoShowroomScreen.jumpStart" />
               </View>
-            )
-          }}
-        />
-      </Screen>
-    </DrawerLayout>
-  )
-}
+            }
+            onScrollToIndexFailed={scrollToIndexFailed}
+            renderSectionHeader={({ section }) => {
+              return (
+                <View>
+                  <Text preset="heading" style={$demoItemName}>
+                    {section.name}
+                  </Text>
+                  <Text style={$demoItemDescription}>{section.description}</Text>
+                </View>
+              )
+            }}
+          />
+        </Screen>
+      </DrawerLayout>
+    )
+  }
 
 const $drawer: ViewStyle = {
   flex: 1,
diff --git a/IgniteDiffApp/app/screens/LoginScreen.tsx b/IgniteDiffApp/app/screens/LoginScreen.tsx
index 5aeeccf..369f847 100644
--- a/IgniteDiffApp/app/screens/LoginScreen.tsx
+++ b/IgniteDiffApp/app/screens/LoginScreen.tsx
@@ -1,5 +1,5 @@
 import { observer } from "mobx-react-lite"
-import React, { useEffect, useMemo, useRef, useState } from "react"
+import React, { FC, useEffect, useMemo, useRef, useState } from "react"
 import { TextInput, TextStyle, ViewStyle } from "react-native"
 import { Button, Icon, Screen, Text, TextField, TextFieldAccessoryProps } from "../components"
 import { useStores } from "../models"
@@ -8,7 +8,7 @@ import { colors, spacing } from "../theme"
 
 interface LoginScreenProps extends AppStackScreenProps<"Login"> {}
 
-export const LoginScreen = observer(function LoginScreen(_props: LoginScreenProps) {
+export const LoginScreen: FC<LoginScreenProps> = observer(function LoginScreen(_props) {
   const authPasswordInput = useRef<TextInput>()
   const [isAuthPasswordHidden, setIsAuthPasswordHidden] = useState(true)
   const [isSubmitted, setIsSubmitted] = useState(false)
diff --git a/IgniteDiffApp/app/screens/WelcomeScreen.tsx b/IgniteDiffApp/app/screens/WelcomeScreen.tsx
index 78f008a..f1324ac 100644
--- a/IgniteDiffApp/app/screens/WelcomeScreen.tsx
+++ b/IgniteDiffApp/app/screens/WelcomeScreen.tsx
@@ -1,5 +1,6 @@
 import { observer } from "mobx-react-lite"
 import React, {
+  FC,
   useLayoutEffect, // @demo remove-current-line
 } from "react"
 import { Image, ImageStyle, TextStyle, View, ViewStyle } from "react-native"
@@ -19,27 +20,23 @@ const welcomeFace = require("../../assets/images/welcome-face.png")
 
 interface WelcomeScreenProps extends AppStackScreenProps<"Welcome"> {} // @demo remove-current-line
 
-export const WelcomeScreen = observer(function WelcomeScreen(
-  props: WelcomeScreenProps, // @demo remove-current-line
+export const WelcomeScreen: FC<WelcomeScreenProps> = observer(function WelcomeScreen(
+  _props, // @demo remove-current-line
 ) {
   // @demo remove-block-start
-  const { navigation } = props
+  const { navigation } = _props
   const {
-    authenticationStore: { setAuthToken },
+    authenticationStore: { logout },
   } = useStores()
 
   function goNext() {
     navigation.navigate("Demo", { screen: "DemoShowroom" })
   }
 
-  function logout() {
-    setAuthToken(undefined)
-  }
-
   useLayoutEffect(() => {
     navigation.setOptions({
       headerShown: true,
-      header: () => <Header rightTx="welcomeScreen.headerRight" onRightPress={logout} />,
+      header: () => <Header rightTx="common.logOut" onRightPress={logout} />,
     })
   }, [])
   // @demo remove-block-end
diff --git a/IgniteDiffApp/app/services/api/api.ts b/IgniteDiffApp/app/services/api/api.ts
index 94ab0d4..0408524 100644
--- a/IgniteDiffApp/app/services/api/api.ts
+++ b/IgniteDiffApp/app/services/api/api.ts
@@ -14,7 +14,7 @@ import Config from "../../config"
 import { GeneralApiProblem, getGeneralApiProblem } from "./apiProblem" // @demo remove-current-line
 import type {
   ApiConfig,
-  ApiFeedResponse, // @demo remove-curent-line
+  ApiFeedResponse, // @demo remove-current-line
 } from "./api.types"
 import type { EpisodeSnapshotIn } from "../../models/Episode" // @demo remove-current-line
 
diff --git a/IgniteDiffApp/assets/images/rnr-image.png b/IgniteDiffApp/assets/images/rnr-image-1.png
similarity index 100%
rename from IgniteDiffApp/assets/images/rnr-image.png
rename to IgniteDiffApp/assets/images/rnr-image-1.png
diff --git a/IgniteDiffApp/ignite/templates/component/NAME.tsx.ejs b/IgniteDiffApp/ignite/templates/component/NAME.tsx.ejs
index ee37d83..aac4ca1 100644
--- a/IgniteDiffApp/ignite/templates/component/NAME.tsx.ejs
+++ b/IgniteDiffApp/ignite/templates/component/NAME.tsx.ejs
@@ -22,7 +22,7 @@ export interface <%= props.pascalCaseName %>Props {
  */
 export const <%= props.pascalCaseName %> = observer(function <%= props.pascalCaseName %>(props: <%= props.pascalCaseName %>Props) {
   const { style } = props
-  const $styles = Object.assign({}, $container, style)
+  const $styles = [$container, style]
 
   return (
     <View style={$styles}>
diff --git a/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs b/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs
index 6546c2e..6d08d1a 100644
--- a/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs
+++ b/IgniteDiffApp/ignite/templates/screen/NAMEScreen.tsx.ejs
@@ -8,7 +8,7 @@ import React, { FC } from "react"
 import { observer } from "mobx-react-lite"
 import { ViewStyle } from "react-native"
 import { StackScreenProps } from "@react-navigation/stack"
-import { AppStackParamList } from "../navigators"
+import { AppStackScreenProps } from "../navigators"
 import { Screen, Text } from "../components"
 // import { useNavigation } from "@react-navigation/native"
 // import { useStores } from "../models"
@@ -22,7 +22,7 @@ import { Screen, Text } from "../components"
 
 // REMOVE ME! ⬇️ This TS ignore will not be necessary after you've added the correct navigator param type
 // @ts-ignore
-export const <%= props.pascalCaseName %>Screen: FC<StackScreenProps<AppStackParamList, "<%= props.pascalCaseName %>">> = observer(function <%= props.pascalCaseName %>Screen() {
+export const <%= props.pascalCaseName %>Screen: FC<StackScreenProps<AppStackScreenProps, "<%= props.pascalCaseName %>">> = observer(function <%= props.pascalCaseName %>Screen() {
   // Pull in one of our MST stores
   // const { someStore, anotherStore } = useStores()
 
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index 8989444..611022c 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -32,6 +32,9 @@
     "expo:build:detox": "detox build -c ios.sim.expo",
     "expo:test:detox": "./bin/downloadExpoApp.sh && detox test --configuration ios.sim.expo"
   },
+  "overrides": {
+    "react-error-overlay": "6.0.9"
+  },
   "dependencies": {
     "@expo-google-fonts/space-grotesk": "^0.2.2",
     "@expo/webpack-config": "^0.17.0",
diff --git a/IgniteDiffApp/yarn.lock b/IgniteDiffApp/yarn.lock
index 31daa0f..3934412 100644
--- a/IgniteDiffApp/yarn.lock
+++ b/IgniteDiffApp/yarn.lock
@@ -2762,9 +2762,9 @@
   integrity sha512-K0VQKziLUWkVKiRVrx4a40iPaxTUefQmjtkQofBkYRcoaaL/8rhwDWww9qWbrgicNOgnpIsMxyNIUM4+n6dUIA==
 
 "@types/node@*":
-  version "18.8.0"
-  resolved "https://registry.yarnpkg.com/@types/node/-/node-18.8.0.tgz#b8ee8d83a99470c0661bd899417fcd77060682fe"
-  integrity sha512-u+h43R6U8xXDt2vzUaVP3VwjjLyOJk6uEciZS8OSyziUQGOwmk+l+4drxcsDboHXwyTaqS1INebghmWMRxq3LA==
+  version "18.8.2"
+  resolved "https://registry.yarnpkg.com/@types/node/-/node-18.8.2.tgz#17d42c6322d917764dd3d2d3a10d7884925de067"
+  integrity sha512-cRMwIgdDN43GO4xMWAfJAecYn8wV4JbsOGHNfNUIDiuYkUYAR5ec4Rj7IO2SAhFPEfpPtLtUTbbny/TCT7aDwA==
 
 "@types/node@16.9.1":
   version "16.9.1"
@@ -4523,9 +4523,9 @@ caniuse-api@^3.0.0:
     lodash.uniq "^4.5.0"
 
 caniuse-lite@^1.0.0, caniuse-lite@^1.0.30001125, caniuse-lite@^1.0.30001400:
-  version "1.0.30001414"
-  resolved "https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001414.tgz#5f1715e506e71860b4b07c50060ea6462217611e"
-  integrity sha512-t55jfSaWjCdocnFdKQoO+d2ct9C59UZg4dY3OnUlSZ447r8pUtIKdp0hpAzrGFultmTC+Us+KpKi4GZl/LXlFg==
+  version "1.0.30001416"
+  resolved "https://registry.yarnpkg.com/caniuse-lite/-/caniuse-lite-1.0.30001416.tgz#29692af8a6a11412f2d3cf9a59d588fcdd21ce4c"
+  integrity sha512-06wzzdAkCPZO+Qm4e/eNghZBDfVNDsCgw33T27OwBH9unE9S478OYw//Q2L7Npf/zBzs7rjZOszIFQkwQKAEqA==
 
 capture-exit@^2.0.0:
   version "2.0.0"
@@ -5063,9 +5063,9 @@ copy-webpack-plugin@~6.0.3:
     webpack-sources "^1.4.3"
 
 core-js-compat@^3.25.1:
-  version "3.25.4"
-  resolved "https://registry.yarnpkg.com/core-js-compat/-/core-js-compat-3.25.4.tgz#730a255d4a47a937513abf1672bf278dc24dcebf"
-  integrity sha512-gCEcIEEqCR6230WroNunK/653CWKhqyCKJ9b+uESqOt/WFJA8B4lTnnQFdpYY5vmBcwJAA90Bo5vXs+CVsf6iA==
+  version "3.25.5"
+  resolved "https://registry.yarnpkg.com/core-js-compat/-/core-js-compat-3.25.5.tgz#0016e8158c904f7b059486639e6e82116eafa7d9"
+  integrity sha512-ovcyhs2DEBUIE0MGEKHP4olCUW/XYte3Vroyxuh38rD1wAO4dHohsovUC4eAOuzFxE6b+RXvBU3UZ9o0YhUTkA==
   dependencies:
     browserslist "^4.21.4"
 
@@ -5932,9 +5932,9 @@ ee-first@1.1.1:
   integrity sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==
 
 electron-to-chromium@^1.3.564, electron-to-chromium@^1.4.251:
-  version "1.4.270"
-  resolved "https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.4.270.tgz#2c6ea409b45cdb5c3e0cb2c08cf6c0ba7e0f2c26"
-  integrity sha512-KNhIzgLiJmDDC444dj9vEOpZEgsV96ult9Iff98Vanumn+ShJHd5se8aX6KeVxdc0YQeqdrezBZv89rleDbvSg==
+  version "1.4.272"
+  resolved "https://registry.yarnpkg.com/electron-to-chromium/-/electron-to-chromium-1.4.272.tgz#cedebaeec5d9879da85b127e65a55c6b4c58344e"
+  integrity sha512-KS6gPPGNrzpVv9HzFVq+Etd0AjZEPr5pvaTBn2yD6KV4+cKW4I0CJoJNgmTG6gUQPAMZ4wIPtcOuoou3qFAZCA==
 
 elliptic@^6.5.3:
   version "6.5.4"
@@ -13818,9 +13818,9 @@ semver@7.3.2:
   integrity sha512-OrOb32TeeambH6UrhtShmF7CRDqhL6/5XpPNp2DuRH6+9QLw/orhp72j87v8Qa1ScDkvrrBNpZcDejAirJmfXQ==
 
 semver@7.x, semver@^7.0.0, semver@^7.3.2, semver@^7.3.5, semver@^7.3.7, semver@~7.3.2:
-  version "7.3.7"
-  resolved "https://registry.yarnpkg.com/semver/-/semver-7.3.7.tgz#12c5b649afdbf9049707796e22a4028814ce523f"
-  integrity sha512-QlYTucUYOews+WeEujDoEGziz4K6c47V/Bd+LjSSYcA94p+DmINdf7ncaUinThfvZyu13lN9OY1XDxt8C0Tw0g==
+  version "7.3.8"
+  resolved "https://registry.yarnpkg.com/semver/-/semver-7.3.8.tgz#07a78feafb3f7b32347d725e33de7e2a2df67798"
+  integrity sha512-NB1ctGL5rlHrPJtFDVIVzTyQylMLu9N9VICA6HSFJo8MCGVTMW6gfpicwKmmK/dAjTOrqu5l63JJOpDSrAis3A==
   dependencies:
     lru-cache "^6.0.0"
 
@@ -14638,9 +14638,9 @@ styleq@^0.1.2:
   integrity sha512-EBNuMVSxpssuFcJq/c4zmZ4tpCyX9E27hz5xPJhw4URjRHcYXPHh8rDHY/tJsw5gtP0+tIL3IBYeQVIYjdZFhg==
 
 sucrase@^3.20.0:
-  version "3.27.0"
-  resolved "https://registry.yarnpkg.com/sucrase/-/sucrase-3.27.0.tgz#32b8e8735ae0e78c6e1e917d2dd61ecad69e5604"
-  integrity sha512-IjpEeFzOWCGrB/e2DnPawkFajW6ONFFgs+lQT1+Ts5Z5ZM9gPnxpDh0q8tu7HVLt6IfRiUTbSsjfhqjHOP/cwQ==
+  version "3.28.0"
+  resolved "https://registry.yarnpkg.com/sucrase/-/sucrase-3.28.0.tgz#7fd8b3118d2155fcdf291088ab77fa6eefd63c4c"
+  integrity sha512-TK9600YInjuiIhVM3729rH4ZKPOsGeyXUwY+Ugu9eilNbdTFyHr6XcAGYbRVZPDgWj6tgI7bx95aaJjHnbffag==
   dependencies:
     commander "^4.0.0"
     glob "7.1.6"
