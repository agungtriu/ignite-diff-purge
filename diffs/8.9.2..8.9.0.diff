diff --git a/IgniteDiffApp/README.md b/IgniteDiffApp/README.md
index e33c2ea..c8699b5 100644
--- a/IgniteDiffApp/README.md
+++ b/IgniteDiffApp/README.md
@@ -30,14 +30,11 @@ ignite-project
 │   ├── services
 │   ├── theme
 │   ├── utils
-│   └── app.tsx
-├── assets
-│   ├── icons
-│   └── images
+│   ├── app.tsx
 ├── test
 │   ├── __snapshots__
 │   ├── mockFile.ts
-│   └── setup.ts
+│   ├── setup.ts
 ├── README.md
 ├── android
 │   ├── app
@@ -84,7 +81,7 @@ app
 ├── services
 ├── theme
 ├── utils
-└── app.tsx
+├── app.tsx
 ```
 
 **components**
@@ -113,38 +110,6 @@ This is a great place to put miscellaneous helpers and utilities. Things like da
 
 **app.tsx** This is the entry point to your app. This is where you will find the main App component which renders the rest of the application.
 
-### ./assets directory
-
-This directory is designed to organize and store various assets, making it easy for you to manage and use them in your application. The assets are further categorized into subdirectories, including `icons` and `images`:
-
-```
-assets
-├── icons
-└── images
-```
-
-**icons**
-This is where your icon assets will live. These icons can be used for buttons, navigation elements, or any other UI components. The recommended format for icons is PNG, but other formats can be used as well.
-
-Ignite comes with a built-in `Icon` component. You can find detailed usage instructions in the [docs](https://github.com/infinitered/ignite/blob/master/docs/Components-Icon.md).
-
-**images**
-This is where your images will live, such as background images, logos, or any other graphics. You can use various formats such as PNG, JPEG, or GIF for your images.
-
-Another valuable built-in component within Ignite is the `AutoImage` component. You can find detailed usage instructions in the [docs](https://github.com/infinitered/ignite/blob/master/docs/Components-AutoImage.md).
-
-How to use your `icon` or `image` assets:
-
-```
-import { Image } from 'react-native';
-
-const MyComponent = () => {
-  return (
-    <Image source={require('../assets/images/my_image.png')} />
-  );
-};
-```
-
 ### ./ignite directory
 
 The `ignite` directory stores all things Ignite, including CLI and boilerplate items. Here you will find templates you can customize to help you get started with React Native.
@@ -161,4 +126,5 @@ Follow our [Maestro Setup](https://ignitecookbook.com/docs/recipes/MaestroSetup)
 
 - [2018 aka Bowser](https://github.com/infinitered/ignite-bowser)
 - [2017 aka Andross](https://github.com/infinitered/ignite-andross)
-- [2016 aka Ignite 1.0](https://github.com/infinitered/ignite-ir-boilerplate-2016)
\ No newline at end of file
+- [2016 aka Ignite 1.0](https://github.com/infinitered/ignite-ir-boilerplate-2016)
+
diff --git a/IgniteDiffApp/app/i18n/i18n.ts b/IgniteDiffApp/app/i18n/i18n.ts
index 06b9cf4..34b9c13 100644
--- a/IgniteDiffApp/app/i18n/i18n.ts
+++ b/IgniteDiffApp/app/i18n/i18n.ts
@@ -16,18 +16,10 @@ i18n.fallbacks = true
  */
 i18n.translations = { ar, en, "en-US": en, ko, fr }
 
-const locales = Localization.getLocales() // This method is guaranteed to return at least one array item.
-// The preferred language is the first element in the array, however, we fallback to en-US, especially for tests.
-const preferredLanguage:
-  | Localization.Locale
-  | { languageTag: string; textDirection: "ltr" | "rtl" } = locales[0] || {
-  languageTag: "en-US",
-  textDirection: "ltr",
-}
-i18n.locale = preferredLanguage.languageTag
+i18n.locale = Localization.locale
 
 // handle RTL languages
-export const isRTL = preferredLanguage.textDirection === "rtl"
+export const isRTL = Localization.isRTL
 I18nManager.allowRTL(isRTL)
 I18nManager.forceRTL(isRTL)
 
