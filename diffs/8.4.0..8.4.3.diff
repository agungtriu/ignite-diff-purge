diff --git a/IgniteDiffApp/app.json b/IgniteDiffApp/app.json
index 9b188e9..25cd0af 100644
--- a/IgniteDiffApp/app.json
+++ b/IgniteDiffApp/app.json
@@ -4,6 +4,7 @@
   "expo": {
     "name": "IgniteDiffApp",
     "slug": "IgniteDiffApp",
+    "scheme": "ignitediffapp",
     "version": "1.0.0",
     "orientation": "portrait",
     "icon": "./assets/images/app-icon-all.png",
diff --git a/IgniteDiffApp/app/app.tsx b/IgniteDiffApp/app/app.tsx
index d21d6e8..718c626 100644
--- a/IgniteDiffApp/app/app.tsx
+++ b/IgniteDiffApp/app/app.tsx
@@ -14,6 +14,7 @@ import "./utils/ignoreWarnings"
 import { useFonts } from "expo-font"
 import React from "react"
 import { initialWindowMetrics, SafeAreaProvider } from "react-native-safe-area-context"
+import * as Linking from "expo-linking"
 import { useInitialRootStore } from "./models"
 import { AppNavigator, useNavigationPersistence } from "./navigators"
 import { ErrorBoundary } from "./screens/ErrorScreen/ErrorBoundary"
@@ -39,6 +40,27 @@ setupReactotron({
 
 export const NAVIGATION_PERSISTENCE_KEY = "NAVIGATION_STATE"
 
+// Web linking configuration
+const prefix = Linking.createURL("/")
+const config = {
+  screens: {
+    Login: {
+      path: "",
+    },
+    Welcome: "welcome",
+    Demo: {
+      screens: {
+        DemoShowroom: {
+          path: "showroom/:queryIndex?/:itemIndex?",
+        },
+        DemoDebug: "debug",
+        DemoPodcastList: "podcast",
+        DemoCommunity: "community",
+      },
+    },
+  },
+}
+
 interface AppProps {
   hideSplashScreen: () => Promise<void>
 }
@@ -74,11 +96,17 @@ function App(props: AppProps) {
   // You can replace with your own loading component if you wish.
   if (!rehydrated || !isNavigationStateRestored || !areFontsLoaded) return null
 
+  const linking = {
+    prefixes: [prefix],
+    config,
+  }
+
   // otherwise, we're ready to render the app
   return (
     <SafeAreaProvider initialMetrics={initialWindowMetrics}>
       <ErrorBoundary catchErrors={Config.catchErrors}>
         <AppNavigator
+          linking={linking}
           initialState={initialNavigationState}
           onStateChange={onNavigationStateChange}
         />
diff --git a/IgniteDiffApp/app/components/Card.tsx b/IgniteDiffApp/app/components/Card.tsx
index 6d4da5a..b118f73 100644
--- a/IgniteDiffApp/app/components/Card.tsx
+++ b/IgniteDiffApp/app/components/Card.tsx
@@ -180,8 +180,8 @@ export function Card(props: CardProps) {
   const $alignmentWrapperStyle = [
     $alignmentWrapper,
     { justifyContent: $alignmentWrapperFlexOptions[verticalAlignment] },
-    LeftComponent && { marginLeft: spacing.medium },
-    RightComponent && { marginRight: spacing.medium },
+    LeftComponent && { marginStart: spacing.medium },
+    RightComponent && { marginEnd: spacing.medium },
   ]
 
   return (
diff --git a/IgniteDiffApp/app/components/Header.tsx b/IgniteDiffApp/app/components/Header.tsx
index 28afc1d..ba8ee0f 100644
--- a/IgniteDiffApp/app/components/Header.tsx
+++ b/IgniteDiffApp/app/components/Header.tsx
@@ -24,6 +24,10 @@ export interface HeaderProps {
    * Optional title style override.
    */
   titleStyle?: StyleProp<TextStyle>
+  /**
+   * Optional outer title container style override.
+   */
+  titleContainerStyle?: StyleProp<ViewStyle>
   /**
    * Optional inner header wrapper style override.
    */
@@ -160,6 +164,7 @@ export function Header(props: HeaderProps) {
     titleMode = "center",
     titleTx,
     titleTxOptions,
+    titleContainerStyle: $titleContainerStyleOverride,
     style: $styleOverride,
     titleStyle: $titleStyleOverride,
     containerStyle: $containerStyleOverride,
@@ -184,16 +189,21 @@ export function Header(props: HeaderProps) {
         />
 
         {!!titleContent && (
-          <Text
-            weight="medium"
-            size="md"
-            text={titleContent}
+          <View
             style={[
-              titleMode === "center" && $centerTitle,
-              titleMode === "flex" && $flexTitle,
-              $titleStyleOverride,
+              titleMode === "center" && $titleWrapperCenter,
+              titleMode === "flex" && $titleWrapperFlex,
+              $titleContainerStyleOverride,
             ]}
-          />
+            pointerEvents="none"
+          >
+            <Text
+              weight="medium"
+              size="md"
+              text={titleContent}
+              style={[$title, $titleStyleOverride]}
+            />
+          </View>
         )}
 
         <HeaderAction
@@ -258,16 +268,7 @@ const $container: ViewStyle = {
   width: "100%",
 }
 
-const $centerTitle: TextStyle = {
-  position: "absolute",
-  width: "100%",
-  textAlign: "center",
-  paddingHorizontal: spacing.huge,
-  zIndex: 1,
-}
-
-const $flexTitle: TextStyle = {
-  flex: 1,
+const $title: TextStyle = {
   textAlign: "center",
 }
 
@@ -296,3 +297,18 @@ const $actionIconContainer: ViewStyle = {
 const $actionFillerContainer: ViewStyle = {
   width: 16,
 }
+
+const $titleWrapperCenter: ViewStyle = {
+  alignItems: "center",
+  justifyContent: "center",
+  height: "100%",
+  width: "100%",
+  position: "absolute",
+  paddingHorizontal: spacing.huge,
+  zIndex: 1,
+}
+
+const $titleWrapperFlex: ViewStyle = {
+  justifyContent: "center",
+  flexGrow: 1,
+}
diff --git a/IgniteDiffApp/app/components/Toggle.tsx b/IgniteDiffApp/app/components/Toggle.tsx
index 6418fe8..3568905 100644
--- a/IgniteDiffApp/app/components/Toggle.tsx
+++ b/IgniteDiffApp/app/components/Toggle.tsx
@@ -1,4 +1,4 @@
-import React, { ComponentType, FC, useEffect, useMemo, useRef, useState } from "react"
+import React, { ComponentType, FC, useMemo } from "react"
 import {
   GestureResponderEvent,
   Image,
@@ -12,20 +12,20 @@ import {
   View,
   ViewStyle,
 } from "react-native"
-import Animated, { FadeIn, useAnimatedStyle, withTiming } from "react-native-reanimated"
+import Animated, { useAnimatedStyle, withTiming } from "react-native-reanimated"
 import { colors, spacing } from "../theme"
-import { iconRegistry } from "./Icon"
+import { iconRegistry, IconTypes } from "./Icon"
 import { Text, TextProps } from "./Text"
 
 type Variants = "checkbox" | "switch" | "radio"
 
-export interface ToggleProps extends Omit<TouchableOpacityProps, "style"> {
+interface BaseToggleProps extends Omit<TouchableOpacityProps, "style"> {
   /**
    * The variant of the toggle.
    * Options: "checkbox", "switch", "radio"
    * Default: "checkbox"
    */
-  variant?: Variants
+  variant?: unknown
   /**
    * A style modifier for different input states.
    */
@@ -60,13 +60,6 @@ export interface ToggleProps extends Omit<TouchableOpacityProps, "style"> {
    * This gives the inputs their inner characteristics and "on" background-color.
    */
   inputInnerStyle?: ViewStyle
-  /**
-   * Optional input detail style override.
-   * For checkbox, this affects the Image component.
-   * For radio, this affects the dot View.
-   * For switch, this affects the knob View.
-   */
-  inputDetailStyle?: ViewStyle & ImageStyle
   /**
    * The position of the label relative to the action component.
    * Default: right
@@ -110,20 +103,52 @@ export interface ToggleProps extends Omit<TouchableOpacityProps, "style"> {
    * Pass any additional props directly to the helper Text component.
    */
   HelperTextProps?: TextProps
+}
+
+interface CheckboxToggleProps extends BaseToggleProps {
+  variant?: "checkbox"
+  /**
+   * Optional style prop that affects the Image component.
+   */
+  inputDetailStyle?: ImageStyle
+  /**
+   * Checkbox-only prop that changes the icon used for the "on" state.
+   */
+  checkboxIcon?: IconTypes
+}
+
+interface RadioToggleProps extends BaseToggleProps {
+  variant?: "radio"
+  /**
+   * Optional style prop that affects the dot View.
+   */
+  inputDetailStyle?: ViewStyle
+}
+
+interface SwitchToggleProps extends BaseToggleProps {
+  variant?: "switch"
   /**
-   * Special prop for the switch variant that adds a text/icon label for on/off states.
+   * Switch-only prop that adds a text/icon label for on/off states.
    */
   switchAccessibilityMode?: "text" | "icon"
+  /**
+   * Optional style prop that affects the knob View.
+   * Note: `width` and `height` rules should be points (numbers), not percentages.
+   */
+  inputDetailStyle?: Omit<ViewStyle, "width" | "height"> & { width?: number; height?: number }
 }
 
+export type ToggleProps = CheckboxToggleProps | RadioToggleProps | SwitchToggleProps
+
 interface ToggleInputProps {
   on: boolean
-  status: ToggleProps["status"]
+  status: BaseToggleProps["status"]
   disabled: boolean
   outerStyle: ViewStyle
   innerStyle: ViewStyle
-  detailStyle: ViewStyle & ImageStyle
-  switchAccessibilityMode?: ToggleProps["switchAccessibilityMode"]
+  detailStyle: Omit<ViewStyle & ImageStyle, "overflow">
+  switchAccessibilityMode?: SwitchToggleProps["switchAccessibilityMode"]
+  checkboxIcon?: CheckboxToggleProps["checkboxIcon"]
 }
 
 /**
@@ -150,7 +175,10 @@ export function Toggle(props: ToggleProps) {
     ...WrapperProps
   } = props
 
-  const disabled = editable === false || status === "disabled"
+  const { switchAccessibilityMode } = props as SwitchToggleProps
+  const { checkboxIcon } = props as CheckboxToggleProps
+
+  const disabled = editable === false || status === "disabled" || props.disabled
 
   const Wrapper = useMemo<ComponentType<TouchableOpacityProps>>(
     () => (disabled ? View : TouchableOpacity),
@@ -191,7 +219,8 @@ export function Toggle(props: ToggleProps) {
           outerStyle={props.inputOuterStyle}
           innerStyle={props.inputInnerStyle}
           detailStyle={props.inputDetailStyle}
-          switchAccessibilityMode={props.switchAccessibilityMode}
+          switchAccessibilityMode={switchAccessibilityMode}
+          checkboxIcon={checkboxIcon}
         />
 
         {labelPosition === "right" && <FieldLabel {...props} labelPosition={labelPosition} />}
@@ -222,6 +251,7 @@ function Checkbox(props: ToggleInputProps) {
     on,
     status,
     disabled,
+    checkboxIcon,
     outerStyle: $outerStyleOverride,
     innerStyle: $innerStyleOverride,
     detailStyle: $detailStyleOverride,
@@ -269,7 +299,7 @@ function Checkbox(props: ToggleInputProps) {
         ]}
       >
         <Image
-          source={iconRegistry.check}
+          source={iconRegistry[checkboxIcon] || iconRegistry.check}
           style={[$checkboxDetail, { tintColor: iconTintColor }, $detailStyleOverride]}
         />
       </Animated.View>
@@ -346,15 +376,15 @@ function Switch(props: ToggleInputProps) {
     detailStyle: $detailStyleOverride,
   } = props
 
-  const knob = useRef<Animated.View>()
-  const [renderedKnobWidth, setRenderedKnobWidth] = useState(null)
+  const knobSizeFallback = 2
 
-  useEffect(() => {
-    // measure knob subsquently if the override changes
-    if (!knob.current) return
-    if (renderedKnobWidth === null) return
-    knob.current.measure((_x, _y, width) => setRenderedKnobWidth(width))
-  }, [$detailStyleOverride?.width])
+  const knobWidth = [$detailStyleOverride?.width, $switchDetail?.width, knobSizeFallback].find(
+    (v) => typeof v === "number",
+  )
+
+  const knobHeight = [$detailStyleOverride?.height, $switchDetail?.height, knobSizeFallback].find(
+    (v) => typeof v === "number",
+  )
 
   const offBackgroundColor = [
     disabled && colors.palette.neutral400,
@@ -387,8 +417,6 @@ function Switch(props: ToggleInputProps) {
   })()
 
   const $animatedSwitchKnob = useAnimatedStyle(() => {
-    if (renderedKnobWidth === null) return {}
-
     const offsetLeft = ($innerStyleOverride?.paddingStart ||
       $innerStyleOverride?.paddingLeft ||
       $switchInner?.paddingStart ||
@@ -402,10 +430,10 @@ function Switch(props: ToggleInputProps) {
       0) as number
 
     const start = withTiming(on ? "100%" : "0%")
-    const marginStart = withTiming(on ? -(renderedKnobWidth || 0) - offsetRight : 0 + offsetLeft)
+    const marginStart = withTiming(on ? -(knobWidth || 0) - offsetRight : 0 + offsetLeft)
 
     return { start, marginStart }
-  }, [on, renderedKnobWidth])
+  }, [on, knobWidth])
 
   return (
     <View
@@ -428,19 +456,13 @@ function Switch(props: ToggleInputProps) {
       <SwitchAccessibilityLabel {...props} role="off" />
 
       <Animated.View
-        ref={knob}
-        entering={FadeIn.delay(150).duration(150)}
         style={[
           $switchDetail,
-          $animatedSwitchKnob,
           $detailStyleOverride,
+          $animatedSwitchKnob,
+          { width: knobWidth, height: knobHeight },
           { backgroundColor: knobBackgroundColor },
         ]}
-        onLayout={(e) => {
-          // measure knob on load only once
-          if (renderedKnobWidth !== null) return
-          setRenderedKnobWidth(e.nativeEvent.layout.width)
-        }}
       />
     </View>
   )
@@ -489,7 +511,7 @@ function SwitchAccessibilityLabel(props: ToggleInputProps & { role: "on" | "off"
   )
 }
 
-function FieldLabel(props: ToggleProps) {
+function FieldLabel(props: BaseToggleProps) {
   const {
     status,
     label,
@@ -585,7 +607,7 @@ const $switchInner: ViewStyle = {
   paddingEnd: 4,
 }
 
-const $switchDetail: ViewStyle = {
+const $switchDetail: SwitchToggleProps["inputDetailStyle"] = {
   borderRadius: 12,
   position: "absolute",
   width: 24,
@@ -601,11 +623,11 @@ const $label: TextStyle = {
 }
 
 const $labelRight: TextStyle = {
-  marginLeft: spacing.medium,
+  marginStart: spacing.medium,
 }
 
 const $labelLeft: TextStyle = {
-  marginRight: spacing.medium,
+  marginEnd: spacing.medium,
 }
 
 const $switchAccessibility: TextStyle = {
diff --git a/IgniteDiffApp/app/navigators/DemoNavigator.tsx b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
index c0d985b..49e8036 100644
--- a/IgniteDiffApp/app/navigators/DemoNavigator.tsx
+++ b/IgniteDiffApp/app/navigators/DemoNavigator.tsx
@@ -12,7 +12,7 @@ import { AppStackParamList, AppStackScreenProps } from "./AppNavigator"
 
 export type DemoTabParamList = {
   DemoCommunity: undefined
-  DemoShowroom: undefined
+  DemoShowroom: { queryIndex?: string; itemIndex?: string }
   DemoDebug: undefined
   DemoPodcastList: undefined
 }
diff --git a/IgniteDiffApp/app/navigators/navigationUtilities.ts b/IgniteDiffApp/app/navigators/navigationUtilities.ts
index f6bd493..bdf331b 100644
--- a/IgniteDiffApp/app/navigators/navigationUtilities.ts
+++ b/IgniteDiffApp/app/navigators/navigationUtilities.ts
@@ -123,7 +123,7 @@ export function useNavigationPersistence(storage: any, persistenceKey: string) {
       }
     }
 
-    // Save the current route name for later comparision
+    // Save the current route name for later comparison
     routeNameRef.current = currentRouteName
 
     // Persist state to storage
diff --git a/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx b/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
index 08e7951..3aa9ca8 100644
--- a/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoPodcastListScreen.tsx
@@ -329,7 +329,7 @@ const $iconContainer: ViewStyle = {
   height: ICON_SIZE,
   width: ICON_SIZE,
   flexDirection: "row",
-  marginRight: spacing.small,
+  marginEnd: spacing.small,
 }
 
 const $metadata: TextStyle = {
@@ -340,7 +340,7 @@ const $metadata: TextStyle = {
 
 const $metadataText: TextStyle = {
   color: colors.textDim,
-  marginRight: spacing.medium,
+  marginEnd: spacing.medium,
   marginBottom: spacing.extraSmall,
 }
 
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoDivider.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoDivider.tsx
index 6be705a..7fe7190 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoDivider.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoDivider.tsx
@@ -29,14 +29,14 @@ export function DemoDivider(props: DemoDividerProps) {
             type === "horizontal" && {
               width: 150,
               height: 1,
-              marginLeft: -75,
+              marginStart: -75,
               marginTop: -1,
             },
             type === "vertical" && {
               height: 50,
               width: 1,
               marginTop: -25,
-              marginLeft: -1,
+              marginStart: -1,
             },
           ]}
         />
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
index 61a2866..7e796de 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
@@ -1,10 +1,21 @@
+import { Link, RouteProp, useRoute } from "@react-navigation/native"
 import React, { FC, ReactElement, useEffect, useRef, useState } from "react"
-import { FlatList, Image, ImageStyle, SectionList, TextStyle, View, ViewStyle } from "react-native"
+import {
+  Dimensions,
+  FlatList,
+  Image,
+  ImageStyle,
+  Platform,
+  SectionList,
+  TextStyle,
+  View,
+  ViewStyle,
+} from "react-native"
 import { DrawerLayout, DrawerState } from "react-native-gesture-handler"
-import { useSharedValue } from "react-native-reanimated"
+import { useSharedValue, withTiming } from "react-native-reanimated"
 import { ListItem, Screen, Text } from "../../components"
 import { isRTL } from "../../i18n"
-import { DemoTabScreenProps } from "../../navigators/DemoNavigator"
+import { DemoTabParamList, DemoTabScreenProps } from "../../navigators/DemoNavigator"
 import { colors, spacing } from "../../theme"
 import { useSafeAreaInsetsStyle } from "../../utils/useSafeAreaInsetsStyle"
 import * as Demos from "./demos"
@@ -18,6 +29,61 @@ export interface Demo {
   data: ReactElement[]
 }
 
+interface DemoListItem {
+  item: { name: string; useCases: string[] }
+  sectionIndex: number
+  handleScroll?: (sectionIndex: number, itemIndex?: number) => void
+}
+
+const slugify = (str) =>
+  str
+    .toLowerCase()
+    .trim()
+    .replace(/[^\w\s-]/g, "")
+    .replace(/[\s_-]+/g, "-")
+    .replace(/^-+|-+$/g, "")
+
+const WebListItem: FC<DemoListItem> = ({ item, sectionIndex }) => {
+  const sectionSlug = item.name.toLowerCase()
+
+  return (
+    <View>
+      <Link to={`/showroom/${sectionSlug}`} style={$menuContainer}>
+        <Text preset="bold">{item.name}</Text>
+      </Link>
+      {item.useCases.map((u) => {
+        const itemSlug = slugify(u)
+
+        return (
+          <Link key={`section${sectionIndex}-${u}`} to={`/showroom/${sectionSlug}/${itemSlug}`}>
+            <Text>{u}</Text>
+          </Link>
+        )
+      })}
+    </View>
+  )
+}
+
+const NativeListItem: FC<DemoListItem> = ({ item, sectionIndex, handleScroll }) => {
+  return (
+    <View>
+      <Text onPress={() => handleScroll(sectionIndex)} preset="bold" style={$menuContainer}>
+        {item.name}
+      </Text>
+      {item.useCases.map((u, index) => (
+        <ListItem
+          key={`section${sectionIndex}-${u}`}
+          onPress={() => handleScroll(sectionIndex, index + 1)}
+          text={u}
+          rightIcon={isRTL ? "caretLeft" : "caretRight"}
+        />
+      ))}
+    </View>
+  )
+}
+
+const ShowroomListItem = Platform.select({ web: WebListItem, default: NativeListItem })
+
 export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
   function DemoShowroomScreen(_props) {
     const [open, setOpen] = useState(false)
@@ -26,6 +92,30 @@ export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
     const listRef = useRef<SectionList>()
     const menuRef = useRef<FlatList>()
     const progress = useSharedValue(0)
+    const route = useRoute<RouteProp<DemoTabParamList, "DemoShowroom">>()
+    const params = route.params
+
+    // handle Web links
+    React.useEffect(() => {
+      if (route.params) {
+        const demoValues = Object.values(Demos)
+        const findSectionIndex = demoValues.findIndex(
+          (x) => x.name.toLowerCase() === params.queryIndex,
+        )
+        let findItemIndex = 0
+        if (params.itemIndex) {
+          try {
+            findItemIndex =
+              demoValues[findSectionIndex].data.findIndex(
+                (u) => slugify(u.props.name) === params.itemIndex,
+              ) + 1
+          } catch (err) {
+            console.error(err)
+          }
+        }
+        handleScroll(findSectionIndex, findItemIndex)
+      }
+    }, [route])
 
     const toggleDrawer = () => {
       if (!open) {
@@ -72,7 +162,7 @@ export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
     return (
       <DrawerLayout
         ref={drawerRef}
-        drawerWidth={326}
+        drawerWidth={Platform.select({ default: 326, web: Dimensions.get("screen").width * 0.3 })}
         drawerType={"slide"}
         drawerPosition={isRTL ? "right" : "left"}
         drawerBackgroundColor={colors.palette.neutral100}
@@ -82,6 +172,9 @@ export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
         }}
         onDrawerStateChanged={(newState: DrawerState, drawerWillShow: boolean) => {
           if (newState === "Settling") {
+            progress.value = withTiming(drawerWillShow ? 1 : 0, {
+              duration: 250,
+            })
             setOpen(drawerWillShow)
           }
         }}
@@ -100,23 +193,7 @@ export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
               }))}
               keyExtractor={(item) => item.name}
               renderItem={({ item, index: sectionIndex }) => (
-                <View>
-                  <Text
-                    onPress={() => handleScroll(sectionIndex)}
-                    preset="bold"
-                    style={$menuContainer}
-                  >
-                    {item.name}
-                  </Text>
-                  {item.useCases.map((u, index) => (
-                    <ListItem
-                      key={`section${sectionIndex}-${u}`}
-                      onPress={() => handleScroll(sectionIndex, index + 1)}
-                      text={u}
-                      rightIcon={isRTL ? "caretLeft" : "caretRight"}
-                    />
-                  ))}
-                </View>
+                <ShowroomListItem {...{ item, sectionIndex, handleScroll }} />
               )}
             />
           </View>
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx
index 352eaef..289a035 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DrawerIconButton.tsx
@@ -15,7 +15,7 @@ interface DrawerIconButtonProps extends PressableProps {
   progress: SharedValue<number>
 }
 
-const AnimatedPressible = Animated.createAnimatedComponent(Pressable)
+const AnimatedPressable = Animated.createAnimatedComponent(Pressable)
 
 export function DrawerIconButton(props: DrawerIconButtonProps) {
   const { open, progress, ...PressableProps } = props
@@ -30,14 +30,14 @@ export function DrawerIconButton(props: DrawerIconButtonProps) {
 
   const animatedTopBarStyles = useAnimatedStyle(() => {
     const backgroundColor = interpolateColor(progress.value, [0, 1], [colors.text, colors.tint])
-    const marginLeft = interpolate(progress.value, [0, 1], [0, -11.5])
+    const marginStart = interpolate(progress.value, [0, 1], [0, -11.5])
     const rotate = interpolate(progress.value, [0, 1], [0, isRTL ? 45 : -45])
     const marginBottom = interpolate(progress.value, [0, 1], [0, -2])
     const width = interpolate(progress.value, [0, 1], [18, 12])
 
     return {
       backgroundColor,
-      marginLeft,
+      marginStart,
       marginBottom,
       width,
       transform: [{ rotate: `${rotate}deg` }],
@@ -57,13 +57,13 @@ export function DrawerIconButton(props: DrawerIconButtonProps) {
   const animatedBottomBarStyles = useAnimatedStyle(() => {
     const marginTop = interpolate(progress.value, [0, 1], [4, 2])
     const backgroundColor = interpolateColor(progress.value, [0, 1], [colors.text, colors.tint])
-    const marginLeft = interpolate(progress.value, [0, 1], [0, -11.5])
+    const marginStart = interpolate(progress.value, [0, 1], [0, -11.5])
     const rotate = interpolate(progress.value, [0, 1], [0, isRTL ? -45 : 45])
     const width = interpolate(progress.value, [0, 1], [18, 12])
 
     return {
       backgroundColor,
-      marginLeft,
+      marginStart,
       width,
       marginTop,
       transform: [{ rotate: `${rotate}deg` }],
@@ -75,13 +75,13 @@ export function DrawerIconButton(props: DrawerIconButtonProps) {
   }, [open, progress])
 
   return (
-    <AnimatedPressible {...PressableProps} style={[$container, animatedContainerStyles]}>
+    <AnimatedPressable {...PressableProps} style={[$container, animatedContainerStyles]}>
       <Animated.View style={[$topBar, animatedTopBarStyles]} />
 
       <Animated.View style={[$middleBar, animatedMiddleBarStyles]} />
 
       <Animated.View style={[$bottomBar, animatedBottomBarStyles]} />
-    </AnimatedPressible>
+    </AnimatedPressable>
   )
 }
 
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoAutoImage.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoAutoImage.tsx
index ccd5a13..9adbf08 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoAutoImage.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoAutoImage.tsx
@@ -133,7 +133,7 @@ export const DemoAutoImage: Demo = {
           />
         </View>
 
-        <View style={[$aspectRatioHeightExampleContainer, { flex: 1, marginLeft: spacing.small }]}>
+        <View style={[$aspectRatioHeightExampleContainer, { flex: 1, marginStart: spacing.small }]}>
           <View style={[$aspectRatioBox, { height: 32 }]} />
           <Image
             source={{
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoToggle.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoToggle.tsx
index 85b2006..5a101d5 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoToggle.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/demos/DemoToggle.tsx
@@ -162,6 +162,14 @@ export const DemoToggle: Demo = {
         labelPosition="left"
       />
       <DemoDivider size={24} />
+      <ControlledToggle
+        variant="checkbox"
+        value
+        status="error"
+        checkboxIcon="ladybug"
+        label="Pass in a custom checkbox icon."
+      />
+      <DemoDivider size={24} />
       <ControlledToggle
         value
         variant="switch"
@@ -274,6 +282,7 @@ export const DemoToggle: Demo = {
       <ControlledToggle
         value
         variant="checkbox"
+        checkboxIcon="ladybug"
         containerStyle={$centeredOneThirdCol}
         inputOuterStyle={{
           width: 50,
@@ -331,7 +340,7 @@ export const DemoToggle: Demo = {
         inputDetailStyle={{
           backgroundColor: colors.palette.accent300,
           height: 36,
-          width: 20,
+          width: 18,
           borderRadius: 36,
         }}
         switchAccessibilityMode="icon"
diff --git a/IgniteDiffApp/package.json b/IgniteDiffApp/package.json
index 90dbe58..15dcb32 100644
--- a/IgniteDiffApp/package.json
+++ b/IgniteDiffApp/package.json
@@ -51,6 +51,7 @@
     "expo-device": "~4.3.0",
     "expo-file-system": "~14.1.0",
     "expo-font": "~10.2.0",
+    "expo-linking": "^3.2.3",
     "expo-localization": "13.1.0",
     "expo-modules-core": "~0.11.3",
     "expo-splash-screen": "~0.16.1",
@@ -125,7 +126,8 @@
   },
   "resolutions": {
     "@types/react": "^17",
-    "@types/react-dom": "^17"
+    "@types/react-dom": "^17",
+    "@expo/dev-server": "0.1.120"
   },
   "prettier": {
     "printWidth": 100,
diff --git a/IgniteDiffApp/yarn.lock b/IgniteDiffApp/yarn.lock
index 0a4b9b3..d96fe81 100644
--- a/IgniteDiffApp/yarn.lock
+++ b/IgniteDiffApp/yarn.lock
@@ -1329,21 +1329,18 @@
     xcode "^3.0.0"
     xml-js "^1.6.11"
 
-"@expo/dev-server@~0.1.120":
-  version "0.1.123"
-  resolved "https://registry.yarnpkg.com/@expo/dev-server/-/dev-server-0.1.123.tgz#71304323b47db9ce300b9a774571ef2312b9d581"
-  integrity sha512-N6UVzzeemfX0AONUSWInvkAAbqon8hRXpyYE/nMPaC6TvAmgGY5ILZAGoXwlpxwY2VKNT0Lx4s/UJ53ytIaHbA==
+"@expo/dev-server@0.1.120", "@expo/dev-server@~0.1.120":
+  version "0.1.120"
+  resolved "https://registry.yarnpkg.com/@expo/dev-server/-/dev-server-0.1.120.tgz#0c7aff4e29d98298214129127f5df951cb7b81dd"
+  integrity sha512-x5/jCv0EOpz6FyehXpI5bgDQTVsGZYvgISkAw7n60RhtG+aid6N2CCR9SDMCH70XaUpFnfTW9qvderpCEj7Puw==
   dependencies:
     "@expo/bunyan" "4.0.0"
-    "@expo/metro-config" "~0.5.1"
+    "@expo/metro-config" "~0.4.0"
     "@expo/osascript" "2.0.33"
-    "@expo/spawn-async" "^1.5.0"
     body-parser "1.19.0"
     chalk "^4.0.0"
     connect "^3.7.0"
     fs-extra "9.0.0"
-    is-docker "^2.0.0"
-    is-wsl "^2.1.1"
     node-fetch "^2.6.0"
     open "^8.3.0"
     resolve-from "^5.0.0"
@@ -1427,20 +1424,6 @@
     resolve-from "^5.0.0"
     sucrase "^3.20.0"
 
-"@expo/metro-config@~0.5.1":
-  version "0.5.1"
-  resolved "https://registry.yarnpkg.com/@expo/metro-config/-/metro-config-0.5.1.tgz#58c715041e1773ad653519535c017138bfc766de"
-  integrity sha512-Rvy4ZFgKNDfXO401z2OQF8fWbPj1lLVDL4GF1aqCIhCDHCKrezbwB0xejpcUyndJRCxBL2BMAM+P24t6cKv9Fw==
-  dependencies:
-    "@expo/config" "~7.0.2"
-    "@expo/json-file" "8.2.36"
-    chalk "^4.1.0"
-    debug "^4.3.2"
-    find-yarn-workspace-root "~2.0.0"
-    getenv "^1.0.0"
-    resolve-from "^5.0.0"
-    sucrase "^3.20.0"
-
 "@expo/ngrok-bin-darwin-ia32@2.2.8":
   version "2.2.8"
   resolved "https://registry.yarnpkg.com/@expo/ngrok-bin-darwin-ia32/-/ngrok-bin-darwin-ia32-2.2.8.tgz#46ed6d485a87396acf4af317beeaab7a1f607315"
@@ -2834,6 +2817,11 @@
   resolved "https://registry.yarnpkg.com/@types/q/-/q-1.5.5.tgz#75a2a8e7d8ab4b230414505d92335d1dcb53a6df"
   integrity sha512-L28j2FcJfSZOnL1WBjDYp2vUHCeIFlyYI/53EwD/rKUBQ7MtUUfbQWiyKJGpcnv4/WgrhWsFKrcPstcAt/J0tQ==
 
+"@types/qs@^6.5.3":
+  version "6.9.7"
+  resolved "https://registry.yarnpkg.com/@types/qs/-/qs-6.9.7.tgz#63bb7d067db107cc1e457c303bc25d511febf6cb"
+  integrity sha512-FGa1F62FT09qcrueBA6qYTrJPVDzah9a+493+o2PCXsesWHIn27G98TsSMs3WPNbZIEj4+VJf6saSFpvD+3Zsw==
+
 "@types/react-dom@^17":
   version "17.0.18"
   resolved "https://registry.yarnpkg.com/@types/react-dom/-/react-dom-17.0.18.tgz#8f7af38f5d9b42f79162eea7492e5a1caff70dc2"
@@ -6676,6 +6664,17 @@ expo-keep-awake@~10.2.0:
   resolved "https://registry.yarnpkg.com/expo-keep-awake/-/expo-keep-awake-10.2.1.tgz#af6d6f7f08cc2a01d6c728c36c5419060006d98d"
   integrity sha512-UBge1BwzDPhUFX0gKu9eDLwEFj4LGiqrOogNoEYxcosM1SwhkbWwPrd3zZtl53LLz02TxEi/CI/MUGJJsrVQLw==
 
+expo-linking@^3.2.3:
+  version "3.2.3"
+  resolved "https://registry.yarnpkg.com/expo-linking/-/expo-linking-3.2.3.tgz#7b493a7fea2aadafc88a42e2fc6a5a4ba6d47df9"
+  integrity sha512-PgiWCao9TecLOPdtWyiNSY+UQGAwdjFx4KbHd1YsF0KnM1CJ2idcaHpDRlQPWSNmDebUZYN461/dVtJi9b2krg==
+  dependencies:
+    "@types/qs" "^6.5.3"
+    expo-constants "~14.0.0"
+    invariant "^2.2.4"
+    qs "^6.9.1"
+    url-parse "^1.5.9"
+
 expo-localization@13.1.0:
   version "13.1.0"
   resolved "https://registry.yarnpkg.com/expo-localization/-/expo-localization-13.1.0.tgz#a69eac5dfee3f1e7b3a443bdd61fd38de5e4e28b"
@@ -12815,7 +12814,7 @@ qrcode-terminal@0.11.0:
   resolved "https://registry.yarnpkg.com/qrcode-terminal/-/qrcode-terminal-0.11.0.tgz#ffc6c28a2fc0bfb47052b47e23f4f446a5fbdb9e"
   integrity sha512-Uu7ii+FQy4Qf82G4xu7ShHhjhGahEpCWc3x8UavY3CTcWV+ufmmCtwkr7ZKsX42jdL0kr1B5FKUeqJvAn51jzQ==
 
-qs@6.11.0, qs@^6.5.1:
+qs@6.11.0, qs@^6.5.1, qs@^6.9.1:
   version "6.11.0"
   resolved "https://registry.yarnpkg.com/qs/-/qs-6.11.0.tgz#fd0d963446f7a65e1367e01abd85429453f0c37a"
   integrity sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==
