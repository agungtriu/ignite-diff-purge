diff --git a/IgniteDiffApp/app/devtools/ReactotronConfig.ts b/IgniteDiffApp/app/devtools/ReactotronConfig.ts
index 97538c8..d23ab06 100644
--- a/IgniteDiffApp/app/devtools/ReactotronConfig.ts
+++ b/IgniteDiffApp/app/devtools/ReactotronConfig.ts
@@ -3,7 +3,7 @@
  * free desktop app for inspecting and debugging your React Native app.
  * @see https://github.com/infinitered/reactotron
  */
-import { Platform } from "react-native"
+import { Platform, NativeModules } from "react-native"
 
 import AsyncStorage from "@react-native-async-storage/async-storage"
 import { ArgType } from "reactotron-core-client"
@@ -46,6 +46,17 @@ if (Platform.OS !== "web") {
  * NOTE: If you edit this file while running the app, you will need to do a full refresh
  * or else your custom commands won't be registered correctly.
  */
+
+Reactotron.onCustomCommand({
+  title: "Show Dev Menu",
+  description: "Opens the React Native dev menu",
+  command: "showDevMenu",
+  handler: () => {
+    Reactotron.log("Showing React Native dev menu")
+    NativeModules.DevMenu.show()
+  },
+})
+
 Reactotron.onCustomCommand({
   title: "Reset Root Store",
   description: "Resets the MST store",
diff --git a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
index 3f81ef7..643ef9b 100644
--- a/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
+++ b/IgniteDiffApp/app/screens/DemoShowroomScreen/DemoShowroomScreen.tsx
@@ -97,7 +97,7 @@ export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
 
     // handle Web links
     React.useEffect(() => {
-      if (route.params) {
+      if (params !== undefined && Object.keys(params).length > 0) {
         const demoValues = Object.values(Demos)
         const findSectionIndex = demoValues.findIndex(
           (x) => x.name.toLowerCase() === params.queryIndex,
@@ -115,7 +115,7 @@ export const DemoShowroomScreen: FC<DemoTabScreenProps<"DemoShowroom">> =
         }
         handleScroll(findSectionIndex, findItemIndex)
       }
-    }, [route])
+    }, [params])
 
     const toggleDrawer = () => {
       if (!open) {
